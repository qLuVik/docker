
==> Audit <==
|------------|--------------------------------|----------|------|---------|---------------------|---------------------|
|  Command   |              Args              | Profile  | User | Version |     Start Time      |      End Time       |
|------------|--------------------------------|----------|------|---------|---------------------|---------------------|
| start      | --memory=2048mb                | minikube | dev  | v1.35.0 | 29 Mar 25 13:02 MSK | 29 Mar 25 13:06 MSK |
|            | --driver=docker                |          |      |         |                     |                     |
| docker-env |                                | minikube | dev  | v1.35.0 | 29 Mar 25 14:28 MSK | 29 Mar 25 14:29 MSK |
| service    | fastapi-service --url          | minikube | dev  | v1.35.0 | 29 Mar 25 14:37 MSK | 29 Mar 25 14:37 MSK |
| docker-env |                                | minikube | dev  | v1.35.0 | 31 Mar 25 11:01 MSK |                     |
| start      | --memory=2048mb                | minikube | dev  | v1.35.0 | 31 Mar 25 11:14 MSK |                     |
|            | --driver=docker                |          |      |         |                     |                     |
| start      | --memory=2048mb                | minikube | dev  | v1.35.0 | 31 Mar 25 11:23 MSK |                     |
|            | --driver=docker                |          |      |         |                     |                     |
| start      |                                | minikube | dev  | v1.35.0 | 31 Mar 25 11:31 MSK |                     |
| start      | --memory=2048mb                | minikube | dev  | v1.35.0 | 31 Mar 25 11:35 MSK |                     |
|            | --driver=docker                |          |      |         |                     |                     |
| delete     |                                | minikube | dev  | v1.35.0 | 31 Mar 25 11:47 MSK | 31 Mar 25 11:47 MSK |
| start      | --memory=2048mb                | minikube | dev  | v1.35.0 | 31 Mar 25 11:47 MSK | 31 Mar 25 11:48 MSK |
|            | --driver=docker                |          |      |         |                     |                     |
| docker-env |                                | minikube | dev  | v1.35.0 | 31 Mar 25 12:08 MSK | 31 Mar 25 12:08 MSK |
| service    | fastapi-service --url          | minikube | dev  | v1.35.0 | 31 Mar 25 12:13 MSK |                     |
|------------|--------------------------------|----------|------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2025/03/31 11:47:31
Running on machine: dev-vm
Binary: Built with gc go1.23.4 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0331 11:47:31.491882   77261 out.go:345] Setting OutFile to fd 1 ...
I0331 11:47:31.492141   77261 out.go:397] isatty.IsTerminal(1) = true
I0331 11:47:31.492144   77261 out.go:358] Setting ErrFile to fd 2...
I0331 11:47:31.492147   77261 out.go:397] isatty.IsTerminal(2) = true
I0331 11:47:31.492934   77261 root.go:338] Updating PATH: /home/dev/.minikube/bin
I0331 11:47:31.494773   77261 out.go:352] Setting JSON to false
I0331 11:47:31.496505   77261 start.go:129] hostinfo: {"hostname":"dev-vm","uptime":3572,"bootTime":1743407280,"procs":249,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"22.04","kernelVersion":"6.8.0-52-generic","kernelArch":"x86_64","virtualizationSystem":"vbox","virtualizationRole":"guest","hostId":"69dcd1d8-fba7-4851-baf9-e72aca0692fa"}
I0331 11:47:31.496548   77261 start.go:139] virtualization: vbox guest
I0331 11:47:31.503396   77261 out.go:177] 😄  minikube v1.35.0 on Ubuntu 22.04 (vbox/amd64)
I0331 11:47:31.507486   77261 notify.go:220] Checking for updates...
I0331 11:47:31.507568   77261 driver.go:394] Setting default libvirt URI to qemu:///system
I0331 11:47:31.551525   77261 docker.go:123] docker version: linux-28.0.1:Docker Engine - Community
I0331 11:47:31.551590   77261 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0331 11:47:31.651447   77261 info.go:266] docker info: {ID:013ec6ff-68ad-4c00-a62f-562bacbb5d40 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:22 OomKillDisable:false NGoroutines:41 SystemTime:2025-03-31 11:47:31.622834885 +0300 MSK LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.0-52-generic OperatingSystem:Ubuntu 22.04.5 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:2 MemTotal:4106764288 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:dev-vm Labels:[] ExperimentalBuild:false ServerVersion:28.0.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb Expected:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb} RuncCommit:{ID:v1.2.4-0-g6c52b3f Expected:v1.2.4-0-g6c52b3f} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.21.0] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.33.0]] Warnings:<nil>}}
I0331 11:47:31.651637   77261 docker.go:318] overlay module found
I0331 11:47:31.663391   77261 out.go:177] ✨  Using the docker driver based on user configuration
I0331 11:47:31.668432   77261 start.go:297] selected driver: docker
I0331 11:47:31.668437   77261 start.go:901] validating driver "docker" against <nil>
I0331 11:47:31.668445   77261 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0331 11:47:31.668895   77261 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0331 11:47:31.801280   77261 info.go:266] docker info: {ID:013ec6ff-68ad-4c00-a62f-562bacbb5d40 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:22 OomKillDisable:false NGoroutines:41 SystemTime:2025-03-31 11:47:31.779170784 +0300 MSK LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.8.0-52-generic OperatingSystem:Ubuntu 22.04.5 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:2 MemTotal:4106764288 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:dev-vm Labels:[] ExperimentalBuild:false ServerVersion:28.0.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb Expected:bcc810d6b9066471b0b6fa75f557a15a1cbf31bb} RuncCommit:{ID:v1.2.4-0-g6c52b3f Expected:v1.2.4-0-g6c52b3f} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=apparmor name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.21.0] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.33.0]] Warnings:<nil>}}
I0331 11:47:31.801399   77261 start_flags.go:310] no existing cluster config was found, will generate one from the flags 
I0331 11:47:31.809525   77261 start_flags.go:929] Wait components to verify : map[apiserver:true system_pods:true]
I0331 11:47:31.814964   77261 out.go:177] 📌  Using Docker driver with root privileges
I0331 11:47:31.819607   77261 cni.go:84] Creating CNI manager for ""
I0331 11:47:31.819665   77261 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0331 11:47:31.819672   77261 start_flags.go:319] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0331 11:47:31.819742   77261 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:2048 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/dev:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0331 11:47:31.825110   77261 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0331 11:47:31.829817   77261 cache.go:121] Beginning downloading kic base image for docker with docker
I0331 11:47:31.835484   77261 out.go:177] 🚜  Pulling base image v0.0.46 ...
I0331 11:47:31.841812   77261 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0331 11:47:31.842115   77261 image.go:81] Checking for gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local docker daemon
I0331 11:47:31.843250   77261 preload.go:146] Found local preload: /home/dev/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-amd64.tar.lz4
I0331 11:47:31.843265   77261 cache.go:56] Caching tarball of preloaded images
I0331 11:47:31.843371   77261 preload.go:172] Found /home/dev/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0331 11:47:31.843378   77261 cache.go:59] Finished verifying existence of preloaded tar for v1.32.0 on docker
I0331 11:47:31.843750   77261 profile.go:143] Saving config to /home/dev/.minikube/profiles/minikube/config.json ...
I0331 11:47:31.843774   77261 lock.go:35] WriteFile acquiring /home/dev/.minikube/profiles/minikube/config.json: {Name:mk295eb91820f2685e95f536d7057c7f1f70d667 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:47:31.931147   77261 image.go:100] Found gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local docker daemon, skipping pull
I0331 11:47:31.931159   77261 cache.go:145] gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 exists in daemon, skipping load
I0331 11:47:31.931168   77261 cache.go:227] Successfully downloaded all kic artifacts
I0331 11:47:31.931198   77261 start.go:360] acquireMachinesLock for minikube: {Name:mka8aebe960f96844893e831cbbb0d8254453735 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0331 11:47:31.931256   77261 start.go:364] duration metric: took 46.92µs to acquireMachinesLock for "minikube"
I0331 11:47:31.931275   77261 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:2048 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/dev:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0331 11:47:31.931328   77261 start.go:125] createHost starting for "" (driver="docker")
I0331 11:47:31.940304   77261 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=2048MB) ...
I0331 11:47:31.940504   77261 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0331 11:47:31.940516   77261 client.go:168] LocalClient.Create starting
I0331 11:47:31.940556   77261 main.go:141] libmachine: Reading certificate data from /home/dev/.minikube/certs/ca.pem
I0331 11:47:31.940580   77261 main.go:141] libmachine: Decoding PEM data...
I0331 11:47:31.940587   77261 main.go:141] libmachine: Parsing certificate...
I0331 11:47:31.940625   77261 main.go:141] libmachine: Reading certificate data from /home/dev/.minikube/certs/cert.pem
I0331 11:47:31.940638   77261 main.go:141] libmachine: Decoding PEM data...
I0331 11:47:31.940643   77261 main.go:141] libmachine: Parsing certificate...
I0331 11:47:31.940911   77261 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0331 11:47:31.974715   77261 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0331 11:47:31.974777   77261 network_create.go:284] running [docker network inspect minikube] to gather additional debugging logs...
I0331 11:47:31.974792   77261 cli_runner.go:164] Run: docker network inspect minikube
W0331 11:47:32.018838   77261 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0331 11:47:32.018854   77261 network_create.go:287] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0331 11:47:32.018865   77261 network_create.go:289] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0331 11:47:32.018968   77261 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0331 11:47:32.045668   77261 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc0018c4b20}
I0331 11:47:32.045692   77261 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0331 11:47:32.045726   77261 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0331 11:47:32.203407   77261 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0331 11:47:32.203427   77261 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0331 11:47:32.204023   77261 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0331 11:47:32.242897   77261 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0331 11:47:32.343218   77261 oci.go:103] Successfully created a docker volume minikube
I0331 11:47:32.343282   77261 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib
I0331 11:47:34.105546   77261 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib: (1.762234078s)
I0331 11:47:34.105564   77261 oci.go:107] Successfully prepared a docker volume minikube
I0331 11:47:34.105651   77261 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0331 11:47:34.105669   77261 kic.go:194] Starting extracting preloaded images to volume ...
I0331 11:47:34.105716   77261 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/dev/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -I lz4 -xf /preloaded.tar -C /extractDir
I0331 11:47:49.883664   77261 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/dev/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.32.0-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -I lz4 -xf /preloaded.tar -C /extractDir: (15.777917154s)
I0331 11:47:49.883686   77261 kic.go:203] duration metric: took 15.778013814s to extract preloaded images to volume ...
W0331 11:47:49.883917   77261 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
W0331 11:47:49.883946   77261 oci.go:249] Your kernel does not support CPU cfs period/quota or the cgroup is not mounted.
I0331 11:47:49.883977   77261 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0331 11:47:50.013208   77261 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=2048mb -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279
I0331 11:47:50.911585   77261 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0331 11:47:50.966804   77261 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0331 11:47:51.011321   77261 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0331 11:47:51.122254   77261 oci.go:144] the created container "minikube" has a running status.
I0331 11:47:51.122273   77261 kic.go:225] Creating ssh key for kic: /home/dev/.minikube/machines/minikube/id_rsa...
I0331 11:47:51.270767   77261 kic_runner.go:191] docker (temp): /home/dev/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0331 11:47:51.315191   77261 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0331 11:47:51.363804   77261 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0331 11:47:51.363813   77261 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0331 11:47:51.464622   77261 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0331 11:47:51.520043   77261 machine.go:93] provisionDockerMachine start ...
I0331 11:47:51.520116   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:51.578192   77261 main.go:141] libmachine: Using SSH client type: native
I0331 11:47:51.578561   77261 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x8641c0] 0x866ea0 <nil>  [] 0s} 127.0.0.1 32783 <nil> <nil>}
I0331 11:47:51.578567   77261 main.go:141] libmachine: About to run SSH command:
hostname
I0331 11:47:51.581385   77261 main.go:141] libmachine: Error dialing TCP: ssh: handshake failed: read tcp 127.0.0.1:33638->127.0.0.1:32783: read: connection reset by peer
I0331 11:47:54.756331   77261 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0331 11:47:54.756346   77261 ubuntu.go:169] provisioning hostname "minikube"
I0331 11:47:54.756394   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:54.816954   77261 main.go:141] libmachine: Using SSH client type: native
I0331 11:47:54.817136   77261 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x8641c0] 0x866ea0 <nil>  [] 0s} 127.0.0.1 32783 <nil> <nil>}
I0331 11:47:54.817142   77261 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0331 11:47:55.080611   77261 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0331 11:47:55.080665   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:55.115028   77261 main.go:141] libmachine: Using SSH client type: native
I0331 11:47:55.115199   77261 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x8641c0] 0x866ea0 <nil>  [] 0s} 127.0.0.1 32783 <nil> <nil>}
I0331 11:47:55.115208   77261 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0331 11:47:55.273073   77261 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0331 11:47:55.273087   77261 ubuntu.go:175] set auth options {CertDir:/home/dev/.minikube CaCertPath:/home/dev/.minikube/certs/ca.pem CaPrivateKeyPath:/home/dev/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/dev/.minikube/machines/server.pem ServerKeyPath:/home/dev/.minikube/machines/server-key.pem ClientKeyPath:/home/dev/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/dev/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/dev/.minikube}
I0331 11:47:55.273101   77261 ubuntu.go:177] setting up certificates
I0331 11:47:55.273108   77261 provision.go:84] configureAuth start
I0331 11:47:55.273160   77261 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0331 11:47:55.309220   77261 provision.go:143] copyHostCerts
I0331 11:47:55.309281   77261 exec_runner.go:144] found /home/dev/.minikube/ca.pem, removing ...
I0331 11:47:55.309287   77261 exec_runner.go:203] rm: /home/dev/.minikube/ca.pem
I0331 11:47:55.309367   77261 exec_runner.go:151] cp: /home/dev/.minikube/certs/ca.pem --> /home/dev/.minikube/ca.pem (1070 bytes)
I0331 11:47:55.309502   77261 exec_runner.go:144] found /home/dev/.minikube/cert.pem, removing ...
I0331 11:47:55.309506   77261 exec_runner.go:203] rm: /home/dev/.minikube/cert.pem
I0331 11:47:55.309543   77261 exec_runner.go:151] cp: /home/dev/.minikube/certs/cert.pem --> /home/dev/.minikube/cert.pem (1111 bytes)
I0331 11:47:55.309610   77261 exec_runner.go:144] found /home/dev/.minikube/key.pem, removing ...
I0331 11:47:55.309612   77261 exec_runner.go:203] rm: /home/dev/.minikube/key.pem
I0331 11:47:55.309647   77261 exec_runner.go:151] cp: /home/dev/.minikube/certs/key.pem --> /home/dev/.minikube/key.pem (1675 bytes)
I0331 11:47:55.309735   77261 provision.go:117] generating server cert: /home/dev/.minikube/machines/server.pem ca-key=/home/dev/.minikube/certs/ca.pem private-key=/home/dev/.minikube/certs/ca-key.pem org=dev.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0331 11:47:55.729475   77261 provision.go:177] copyRemoteCerts
I0331 11:47:55.729530   77261 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0331 11:47:55.729565   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:55.790167   77261 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32783 SSHKeyPath:/home/dev/.minikube/machines/minikube/id_rsa Username:docker}
I0331 11:47:55.899355   77261 ssh_runner.go:362] scp /home/dev/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0331 11:47:55.978332   77261 ssh_runner.go:362] scp /home/dev/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1070 bytes)
I0331 11:47:56.022742   77261 ssh_runner.go:362] scp /home/dev/.minikube/machines/server.pem --> /etc/docker/server.pem (1172 bytes)
I0331 11:47:56.069094   77261 provision.go:87] duration metric: took 795.974622ms to configureAuth
I0331 11:47:56.069109   77261 ubuntu.go:193] setting minikube options for container-runtime
I0331 11:47:56.069238   77261 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0331 11:47:56.069284   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:56.100587   77261 main.go:141] libmachine: Using SSH client type: native
I0331 11:47:56.100737   77261 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x8641c0] 0x866ea0 <nil>  [] 0s} 127.0.0.1 32783 <nil> <nil>}
I0331 11:47:56.100742   77261 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0331 11:47:56.262383   77261 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0331 11:47:56.262395   77261 ubuntu.go:71] root file system type: overlay
I0331 11:47:56.262468   77261 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0331 11:47:56.262521   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:56.309150   77261 main.go:141] libmachine: Using SSH client type: native
I0331 11:47:56.309310   77261 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x8641c0] 0x866ea0 <nil>  [] 0s} 127.0.0.1 32783 <nil> <nil>}
I0331 11:47:56.309348   77261 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0331 11:47:56.486515   77261 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0331 11:47:56.486581   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:56.533959   77261 main.go:141] libmachine: Using SSH client type: native
I0331 11:47:56.534478   77261 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x8641c0] 0x866ea0 <nil>  [] 0s} 127.0.0.1 32783 <nil> <nil>}
I0331 11:47:56.534504   77261 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0331 11:47:58.494873   77261 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2024-12-17 15:44:19.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2025-03-31 08:47:56.483646576 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0331 11:47:58.494889   77261 machine.go:96] duration metric: took 6.974834282s to provisionDockerMachine
I0331 11:47:58.494898   77261 client.go:171] duration metric: took 26.554379s to LocalClient.Create
I0331 11:47:58.494907   77261 start.go:167] duration metric: took 26.55440257s to libmachine.API.Create "minikube"
I0331 11:47:58.494912   77261 start.go:293] postStartSetup for "minikube" (driver="docker")
I0331 11:47:58.494920   77261 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0331 11:47:58.494977   77261 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0331 11:47:58.495022   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:58.559264   77261 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32783 SSHKeyPath:/home/dev/.minikube/machines/minikube/id_rsa Username:docker}
I0331 11:47:58.675237   77261 ssh_runner.go:195] Run: cat /etc/os-release
I0331 11:47:58.680292   77261 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0331 11:47:58.680307   77261 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0331 11:47:58.680311   77261 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0331 11:47:58.680315   77261 info.go:137] Remote host: Ubuntu 22.04.5 LTS
I0331 11:47:58.680321   77261 filesync.go:126] Scanning /home/dev/.minikube/addons for local assets ...
I0331 11:47:58.680359   77261 filesync.go:126] Scanning /home/dev/.minikube/files for local assets ...
I0331 11:47:58.680375   77261 start.go:296] duration metric: took 185.460465ms for postStartSetup
I0331 11:47:58.681233   77261 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0331 11:47:58.733961   77261 profile.go:143] Saving config to /home/dev/.minikube/profiles/minikube/config.json ...
I0331 11:47:58.734688   77261 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0331 11:47:58.734723   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:58.782550   77261 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32783 SSHKeyPath:/home/dev/.minikube/machines/minikube/id_rsa Username:docker}
I0331 11:47:58.896070   77261 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0331 11:47:58.906611   77261 start.go:128] duration metric: took 26.975244089s to createHost
I0331 11:47:58.906623   77261 start.go:83] releasing machines lock for "minikube", held for 26.975362619s
I0331 11:47:58.906675   77261 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0331 11:47:58.950132   77261 ssh_runner.go:195] Run: cat /version.json
I0331 11:47:58.950172   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:58.950830   77261 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0331 11:47:58.950871   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:47:59.002264   77261 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32783 SSHKeyPath:/home/dev/.minikube/machines/minikube/id_rsa Username:docker}
I0331 11:47:59.010642   77261 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32783 SSHKeyPath:/home/dev/.minikube/machines/minikube/id_rsa Username:docker}
I0331 11:47:59.446653   77261 ssh_runner.go:195] Run: systemctl --version
I0331 11:47:59.455538   77261 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0331 11:47:59.468488   77261 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0331 11:47:59.525417   77261 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0331 11:47:59.525472   77261 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0331 11:47:59.597595   77261 cni.go:262] disabled [/etc/cni/net.d/100-crio-bridge.conf, /etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)
I0331 11:47:59.597613   77261 start.go:495] detecting cgroup driver to use...
I0331 11:47:59.597639   77261 detect.go:190] detected "systemd" cgroup driver on host os
I0331 11:47:59.597716   77261 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0331 11:47:59.628142   77261 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I0331 11:47:59.646488   77261 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0331 11:47:59.666936   77261 containerd.go:146] configuring containerd to use "systemd" as cgroup driver...
I0331 11:47:59.666986   77261 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = true|g' /etc/containerd/config.toml"
I0331 11:47:59.687882   77261 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0331 11:47:59.708016   77261 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0331 11:47:59.728977   77261 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0331 11:47:59.749012   77261 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0331 11:47:59.774841   77261 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0331 11:47:59.800389   77261 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0331 11:47:59.817894   77261 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0331 11:47:59.837315   77261 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0331 11:47:59.870813   77261 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0331 11:47:59.888309   77261 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0331 11:48:00.003324   77261 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0331 11:48:00.156537   77261 start.go:495] detecting cgroup driver to use...
I0331 11:48:00.156589   77261 detect.go:190] detected "systemd" cgroup driver on host os
I0331 11:48:00.156631   77261 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0331 11:48:00.187839   77261 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0331 11:48:00.187892   77261 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0331 11:48:00.233143   77261 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0331 11:48:00.268311   77261 ssh_runner.go:195] Run: which cri-dockerd
I0331 11:48:00.274953   77261 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0331 11:48:00.298422   77261 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I0331 11:48:00.328802   77261 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0331 11:48:00.515684   77261 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0331 11:48:00.698168   77261 docker.go:574] configuring docker to use "systemd" as cgroup driver...
I0331 11:48:00.698247   77261 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (129 bytes)
I0331 11:48:00.725004   77261 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0331 11:48:00.888908   77261 ssh_runner.go:195] Run: sudo systemctl restart docker
I0331 11:48:02.459243   77261 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.570311543s)
I0331 11:48:02.459293   77261 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0331 11:48:02.480907   77261 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0331 11:48:02.504536   77261 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0331 11:48:02.648232   77261 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0331 11:48:02.758266   77261 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0331 11:48:02.894273   77261 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0331 11:48:02.923283   77261 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0331 11:48:02.941204   77261 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0331 11:48:03.057557   77261 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0331 11:48:04.298659   77261 ssh_runner.go:235] Completed: sudo systemctl restart cri-docker.service: (1.241078593s)
I0331 11:48:04.298678   77261 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0331 11:48:04.298894   77261 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0331 11:48:04.309729   77261 start.go:563] Will wait 60s for crictl version
I0331 11:48:04.309779   77261 ssh_runner.go:195] Run: which crictl
I0331 11:48:04.324206   77261 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0331 11:48:04.462533   77261 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  27.4.1
RuntimeApiVersion:  v1
I0331 11:48:04.462577   77261 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0331 11:48:04.552197   77261 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0331 11:48:04.609969   77261 out.go:235] 🐳  Preparing Kubernetes v1.32.0 on Docker 27.4.1 ...
I0331 11:48:04.610296   77261 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0331 11:48:04.652282   77261 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0331 11:48:04.662259   77261 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0331 11:48:04.683135   77261 kubeadm.go:883] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:2048 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/dev:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0331 11:48:04.683213   77261 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0331 11:48:04.683255   77261 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0331 11:48:04.723302   77261 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0331 11:48:04.723313   77261 docker.go:619] Images already preloaded, skipping extraction
I0331 11:48:04.723371   77261 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0331 11:48:04.760631   77261 docker.go:689] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.32.0
registry.k8s.io/kube-scheduler:v1.32.0
registry.k8s.io/kube-controller-manager:v1.32.0
registry.k8s.io/kube-proxy:v1.32.0
registry.k8s.io/etcd:3.5.16-0
registry.k8s.io/coredns/coredns:v1.11.3
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0331 11:48:04.760644   77261 cache_images.go:84] Images are preloaded, skipping loading
I0331 11:48:04.760653   77261 kubeadm.go:934] updating node { 192.168.49.2 8443 v1.32.0 docker true true} ...
I0331 11:48:04.760732   77261 kubeadm.go:946] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.32.0/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0331 11:48:04.760783   77261 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0331 11:48:05.133279   77261 cni.go:84] Creating CNI manager for ""
I0331 11:48:05.133297   77261 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0331 11:48:05.133305   77261 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0331 11:48:05.133319   77261 kubeadm.go:189] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.32.0 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0331 11:48:05.133414   77261 kubeadm.go:195] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    - name: "node-ip"
      value: "192.168.49.2"
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    - name: "enable-admission-plugins"
      value: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
    - name: "leader-elect"
      value: "false"
scheduler:
  extraArgs:
    - name: "leader-elect"
      value: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      - name: "proxy-refresh-interval"
        value: "70000"
kubernetesVersion: v1.32.0
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0331 11:48:05.133470   77261 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.32.0
I0331 11:48:05.170596   77261 binaries.go:44] Found k8s binaries, skipping transfer
I0331 11:48:05.170931   77261 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0331 11:48:05.190610   77261 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0331 11:48:05.219907   77261 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0331 11:48:05.251425   77261 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2285 bytes)
I0331 11:48:05.288667   77261 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0331 11:48:05.293728   77261 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0331 11:48:05.314625   77261 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0331 11:48:05.437099   77261 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0331 11:48:05.500867   77261 certs.go:68] Setting up /home/dev/.minikube/profiles/minikube for IP: 192.168.49.2
I0331 11:48:05.500877   77261 certs.go:194] generating shared ca certs ...
I0331 11:48:05.500902   77261 certs.go:226] acquiring lock for ca certs: {Name:mkc7c6196a8c093b0c82a72ce16876c69f0409fb Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:48:05.501033   77261 certs.go:235] skipping valid "minikubeCA" ca cert: /home/dev/.minikube/ca.key
I0331 11:48:05.501062   77261 certs.go:235] skipping valid "proxyClientCA" ca cert: /home/dev/.minikube/proxy-client-ca.key
I0331 11:48:05.501067   77261 certs.go:256] generating profile certs ...
I0331 11:48:05.501112   77261 certs.go:363] generating signed profile cert for "minikube-user": /home/dev/.minikube/profiles/minikube/client.key
I0331 11:48:05.501127   77261 crypto.go:68] Generating cert /home/dev/.minikube/profiles/minikube/client.crt with IP's: []
I0331 11:48:05.566194   77261 crypto.go:156] Writing cert to /home/dev/.minikube/profiles/minikube/client.crt ...
I0331 11:48:05.566208   77261 lock.go:35] WriteFile acquiring /home/dev/.minikube/profiles/minikube/client.crt: {Name:mkc0d743f7b87445c81331902d20f16e911f9be7 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:48:05.566715   77261 crypto.go:164] Writing key to /home/dev/.minikube/profiles/minikube/client.key ...
I0331 11:48:05.566733   77261 lock.go:35] WriteFile acquiring /home/dev/.minikube/profiles/minikube/client.key: {Name:mkb5c7866fdb67529f0e5a5f8c0614c6bf7aa482 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:48:05.566834   77261 certs.go:363] generating signed profile cert for "minikube": /home/dev/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0331 11:48:05.566846   77261 crypto.go:68] Generating cert /home/dev/.minikube/profiles/minikube/apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I0331 11:48:05.671635   77261 crypto.go:156] Writing cert to /home/dev/.minikube/profiles/minikube/apiserver.crt.7fb57e3c ...
I0331 11:48:05.671650   77261 lock.go:35] WriteFile acquiring /home/dev/.minikube/profiles/minikube/apiserver.crt.7fb57e3c: {Name:mk868cfe4ae8e58d386ce1608525dee625096eff Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:48:05.672084   77261 crypto.go:164] Writing key to /home/dev/.minikube/profiles/minikube/apiserver.key.7fb57e3c ...
I0331 11:48:05.672090   77261 lock.go:35] WriteFile acquiring /home/dev/.minikube/profiles/minikube/apiserver.key.7fb57e3c: {Name:mkde2eca9375d4625f802c5650edad1c6b5c2307 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:48:05.672368   77261 certs.go:381] copying /home/dev/.minikube/profiles/minikube/apiserver.crt.7fb57e3c -> /home/dev/.minikube/profiles/minikube/apiserver.crt
I0331 11:48:05.672469   77261 certs.go:385] copying /home/dev/.minikube/profiles/minikube/apiserver.key.7fb57e3c -> /home/dev/.minikube/profiles/minikube/apiserver.key
I0331 11:48:05.672540   77261 certs.go:363] generating signed profile cert for "aggregator": /home/dev/.minikube/profiles/minikube/proxy-client.key
I0331 11:48:05.672552   77261 crypto.go:68] Generating cert /home/dev/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0331 11:48:06.029414   77261 crypto.go:156] Writing cert to /home/dev/.minikube/profiles/minikube/proxy-client.crt ...
I0331 11:48:06.029430   77261 lock.go:35] WriteFile acquiring /home/dev/.minikube/profiles/minikube/proxy-client.crt: {Name:mkedf8699775be29e0376fefcb49c093b9aa7e6c Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:48:06.030133   77261 crypto.go:164] Writing key to /home/dev/.minikube/profiles/minikube/proxy-client.key ...
I0331 11:48:06.030140   77261 lock.go:35] WriteFile acquiring /home/dev/.minikube/profiles/minikube/proxy-client.key: {Name:mkb3941f8fdf63d91add1fb6cb627be7e4647d7e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:48:06.030347   77261 certs.go:484] found cert: /home/dev/.minikube/certs/ca-key.pem (1679 bytes)
I0331 11:48:06.030378   77261 certs.go:484] found cert: /home/dev/.minikube/certs/ca.pem (1070 bytes)
I0331 11:48:06.030402   77261 certs.go:484] found cert: /home/dev/.minikube/certs/cert.pem (1111 bytes)
I0331 11:48:06.030423   77261 certs.go:484] found cert: /home/dev/.minikube/certs/key.pem (1675 bytes)
I0331 11:48:06.031392   77261 ssh_runner.go:362] scp /home/dev/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0331 11:48:06.080054   77261 ssh_runner.go:362] scp /home/dev/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0331 11:48:06.122953   77261 ssh_runner.go:362] scp /home/dev/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0331 11:48:06.169547   77261 ssh_runner.go:362] scp /home/dev/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0331 11:48:06.211771   77261 ssh_runner.go:362] scp /home/dev/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0331 11:48:06.258191   77261 ssh_runner.go:362] scp /home/dev/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0331 11:48:06.306365   77261 ssh_runner.go:362] scp /home/dev/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0331 11:48:06.362956   77261 ssh_runner.go:362] scp /home/dev/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0331 11:48:06.413492   77261 ssh_runner.go:362] scp /home/dev/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0331 11:48:06.460335   77261 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0331 11:48:06.510771   77261 ssh_runner.go:195] Run: openssl version
I0331 11:48:06.547322   77261 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0331 11:48:06.588805   77261 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0331 11:48:06.599653   77261 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Mar 29 10:05 /usr/share/ca-certificates/minikubeCA.pem
I0331 11:48:06.599685   77261 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0331 11:48:06.612611   77261 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0331 11:48:06.630123   77261 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0331 11:48:06.640581   77261 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I0331 11:48:06.640637   77261 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:2048 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/dev:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0331 11:48:06.641465   77261 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0331 11:48:06.677111   77261 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0331 11:48:06.700852   77261 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0331 11:48:06.721342   77261 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I0331 11:48:06.721388   77261 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0331 11:48:06.738420   77261 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0331 11:48:06.738429   77261 kubeadm.go:157] found existing configuration files:

I0331 11:48:06.738470   77261 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0331 11:48:06.755446   77261 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0331 11:48:06.755490   77261 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0331 11:48:06.777389   77261 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0331 11:48:06.799690   77261 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0331 11:48:06.799739   77261 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0331 11:48:06.818436   77261 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0331 11:48:06.844642   77261 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0331 11:48:06.846313   77261 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0331 11:48:06.871744   77261 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0331 11:48:06.899373   77261 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0331 11:48:06.899417   77261 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0331 11:48:06.920208   77261 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.32.0:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0331 11:48:09.367365   77261 kubeadm.go:310] [init] Using Kubernetes version: v1.32.0
I0331 11:48:09.367403   77261 kubeadm.go:310] [preflight] Running pre-flight checks
I0331 11:48:09.475155   77261 kubeadm.go:310] [preflight] The system verification failed. Printing the output from the verification:
I0331 11:48:09.475204   77261 kubeadm.go:310] [0;37mKERNEL_VERSION[0m: [0;32m6.8.0-52-generic[0m
I0331 11:48:09.475227   77261 kubeadm.go:310] [0;37mOS[0m: [0;32mLinux[0m
I0331 11:48:09.475259   77261 kubeadm.go:310] [0;37mCGROUPS_CPU[0m: [0;32menabled[0m
I0331 11:48:09.475289   77261 kubeadm.go:310] [0;37mCGROUPS_CPUSET[0m: [0;32menabled[0m
I0331 11:48:09.475319   77261 kubeadm.go:310] [0;37mCGROUPS_DEVICES[0m: [0;32menabled[0m
I0331 11:48:09.475349   77261 kubeadm.go:310] [0;37mCGROUPS_FREEZER[0m: [0;32menabled[0m
I0331 11:48:09.475379   77261 kubeadm.go:310] [0;37mCGROUPS_MEMORY[0m: [0;32menabled[0m
I0331 11:48:09.475408   77261 kubeadm.go:310] [0;37mCGROUPS_PIDS[0m: [0;32menabled[0m
I0331 11:48:09.475438   77261 kubeadm.go:310] [0;37mCGROUPS_HUGETLB[0m: [0;32menabled[0m
I0331 11:48:09.475466   77261 kubeadm.go:310] [0;37mCGROUPS_IO[0m: [0;32menabled[0m
I0331 11:48:09.659061   77261 kubeadm.go:310] [preflight] Pulling images required for setting up a Kubernetes cluster
I0331 11:48:09.659135   77261 kubeadm.go:310] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0331 11:48:09.659195   77261 kubeadm.go:310] [preflight] You can also perform this action beforehand using 'kubeadm config images pull'
I0331 11:48:09.745001   77261 kubeadm.go:310] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0331 11:48:09.770263   77261 out.go:235]     ▪ Generating certificates and keys ...
I0331 11:48:09.770575   77261 kubeadm.go:310] [certs] Using existing ca certificate authority
I0331 11:48:09.770626   77261 kubeadm.go:310] [certs] Using existing apiserver certificate and key on disk
I0331 11:48:10.039597   77261 kubeadm.go:310] [certs] Generating "apiserver-kubelet-client" certificate and key
I0331 11:48:10.267716   77261 kubeadm.go:310] [certs] Generating "front-proxy-ca" certificate and key
I0331 11:48:10.554188   77261 kubeadm.go:310] [certs] Generating "front-proxy-client" certificate and key
I0331 11:48:10.690422   77261 kubeadm.go:310] [certs] Generating "etcd/ca" certificate and key
I0331 11:48:10.812719   77261 kubeadm.go:310] [certs] Generating "etcd/server" certificate and key
I0331 11:48:10.812823   77261 kubeadm.go:310] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0331 11:48:10.855991   77261 kubeadm.go:310] [certs] Generating "etcd/peer" certificate and key
I0331 11:48:10.856074   77261 kubeadm.go:310] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0331 11:48:10.929252   77261 kubeadm.go:310] [certs] Generating "etcd/healthcheck-client" certificate and key
I0331 11:48:11.015109   77261 kubeadm.go:310] [certs] Generating "apiserver-etcd-client" certificate and key
I0331 11:48:11.161494   77261 kubeadm.go:310] [certs] Generating "sa" key and public key
I0331 11:48:11.165785   77261 kubeadm.go:310] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0331 11:48:11.278778   77261 kubeadm.go:310] [kubeconfig] Writing "admin.conf" kubeconfig file
I0331 11:48:11.445661   77261 kubeadm.go:310] [kubeconfig] Writing "super-admin.conf" kubeconfig file
I0331 11:48:11.623471   77261 kubeadm.go:310] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0331 11:48:11.790906   77261 kubeadm.go:310] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0331 11:48:12.120640   77261 kubeadm.go:310] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0331 11:48:12.120699   77261 kubeadm.go:310] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0331 11:48:12.120748   77261 kubeadm.go:310] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0331 11:48:12.129648   77261 out.go:235]     ▪ Booting up control plane ...
I0331 11:48:12.129807   77261 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0331 11:48:12.129859   77261 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0331 11:48:12.129905   77261 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0331 11:48:12.140979   77261 kubeadm.go:310] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0331 11:48:12.188945   77261 kubeadm.go:310] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0331 11:48:12.189684   77261 kubeadm.go:310] [kubelet-start] Starting the kubelet
I0331 11:48:12.502284   77261 kubeadm.go:310] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
I0331 11:48:12.502360   77261 kubeadm.go:310] [kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
I0331 11:48:14.005645   77261 kubeadm.go:310] [kubelet-check] The kubelet is healthy after 1.501869176s
I0331 11:48:14.005705   77261 kubeadm.go:310] [api-check] Waiting for a healthy API server. This can take up to 4m0s
I0331 11:48:28.507443   77261 kubeadm.go:310] [api-check] The API server is healthy after 14.502637126s
I0331 11:48:28.533757   77261 kubeadm.go:310] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0331 11:48:28.851548   77261 kubeadm.go:310] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0331 11:48:29.001877   77261 kubeadm.go:310] [upload-certs] Skipping phase. Please see --upload-certs
I0331 11:48:29.002412   77261 kubeadm.go:310] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0331 11:48:29.020990   77261 kubeadm.go:310] [bootstrap-token] Using token: 2wgh03.4grmf2r3dmnedb6s
I0331 11:48:29.088791   77261 out.go:235]     ▪ Configuring RBAC rules ...
I0331 11:48:29.088910   77261 kubeadm.go:310] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0331 11:48:29.099688   77261 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0331 11:48:29.151004   77261 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0331 11:48:29.172446   77261 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0331 11:48:29.199675   77261 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0331 11:48:29.241087   77261 kubeadm.go:310] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0331 11:48:29.290831   77261 kubeadm.go:310] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0331 11:48:30.596014   77261 kubeadm.go:310] [addons] Applied essential addon: CoreDNS
I0331 11:48:30.729871   77261 kubeadm.go:310] [addons] Applied essential addon: kube-proxy
I0331 11:48:30.731107   77261 kubeadm.go:310] 
I0331 11:48:30.731149   77261 kubeadm.go:310] Your Kubernetes control-plane has initialized successfully!
I0331 11:48:30.731152   77261 kubeadm.go:310] 
I0331 11:48:30.731203   77261 kubeadm.go:310] To start using your cluster, you need to run the following as a regular user:
I0331 11:48:30.731206   77261 kubeadm.go:310] 
I0331 11:48:30.731222   77261 kubeadm.go:310]   mkdir -p $HOME/.kube
I0331 11:48:30.731260   77261 kubeadm.go:310]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0331 11:48:30.731293   77261 kubeadm.go:310]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0331 11:48:30.731298   77261 kubeadm.go:310] 
I0331 11:48:30.731333   77261 kubeadm.go:310] Alternatively, if you are the root user, you can run:
I0331 11:48:30.731335   77261 kubeadm.go:310] 
I0331 11:48:30.731366   77261 kubeadm.go:310]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0331 11:48:30.731368   77261 kubeadm.go:310] 
I0331 11:48:30.731402   77261 kubeadm.go:310] You should now deploy a pod network to the cluster.
I0331 11:48:30.731451   77261 kubeadm.go:310] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0331 11:48:30.731507   77261 kubeadm.go:310]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0331 11:48:30.731511   77261 kubeadm.go:310] 
I0331 11:48:30.731564   77261 kubeadm.go:310] You can now join any number of control-plane nodes by copying certificate authorities
I0331 11:48:30.731612   77261 kubeadm.go:310] and service account keys on each node and then running the following as root:
I0331 11:48:30.731614   77261 kubeadm.go:310] 
I0331 11:48:30.731666   77261 kubeadm.go:310]   kubeadm join control-plane.minikube.internal:8443 --token 2wgh03.4grmf2r3dmnedb6s \
I0331 11:48:30.731734   77261 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:d362d1e84eaf1bd86a72a69d36024339fad187b2a1303362253afd84f7a8e415 \
I0331 11:48:30.731747   77261 kubeadm.go:310] 	--control-plane 
I0331 11:48:30.731749   77261 kubeadm.go:310] 
I0331 11:48:30.731802   77261 kubeadm.go:310] Then you can join any number of worker nodes by running the following on each as root:
I0331 11:48:30.731804   77261 kubeadm.go:310] 
I0331 11:48:30.731855   77261 kubeadm.go:310] kubeadm join control-plane.minikube.internal:8443 --token 2wgh03.4grmf2r3dmnedb6s \
I0331 11:48:30.731918   77261 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:d362d1e84eaf1bd86a72a69d36024339fad187b2a1303362253afd84f7a8e415 
I0331 11:48:30.778819   77261 kubeadm.go:310] 	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
I0331 11:48:30.778969   77261 kubeadm.go:310] 	[WARNING SystemVerification]: failed to parse kernel config: unable to load kernel module: "configs", output: "modprobe: FATAL: Module configs not found in directory /lib/modules/6.8.0-52-generic\n", err: exit status 1
I0331 11:48:30.779041   77261 kubeadm.go:310] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0331 11:48:30.779051   77261 cni.go:84] Creating CNI manager for ""
I0331 11:48:30.779061   77261 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0331 11:48:30.798963   77261 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0331 11:48:30.807048   77261 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0331 11:48:31.008813   77261 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (496 bytes)
I0331 11:48:31.151837   77261 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0331 11:48:31.151947   77261 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.32.0/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0331 11:48:31.151948   77261 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2025_03_31T11_48_31_0700 minikube.k8s.io/version=v1.35.0 minikube.k8s.io/commit=dd5d320e41b5451cdf3c01891bc4e13d189586ed-dirty minikube.k8s.io/name=minikube minikube.k8s.io/primary=true
I0331 11:48:33.474994   77261 ssh_runner.go:235] Completed: sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2025_03_31T11_48_31_0700 minikube.k8s.io/version=v1.35.0 minikube.k8s.io/commit=dd5d320e41b5451cdf3c01891bc4e13d189586ed-dirty minikube.k8s.io/name=minikube minikube.k8s.io/primary=true: (2.323020805s)
I0331 11:48:33.475018   77261 ssh_runner.go:235] Completed: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj": (2.323171964s)
I0331 11:48:33.475023   77261 ops.go:34] apiserver oom_adj: -16
I0331 11:48:33.582467   77261 ssh_runner.go:235] Completed: sudo /var/lib/minikube/binaries/v1.32.0/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig: (2.430497595s)
I0331 11:48:33.582485   77261 kubeadm.go:1113] duration metric: took 2.430583245s to wait for elevateKubeSystemPrivileges
I0331 11:48:33.582493   77261 kubeadm.go:394] duration metric: took 26.941875686s to StartCluster
I0331 11:48:33.582641   77261 settings.go:142] acquiring lock: {Name:mkdc15c564723cb1c38622d48a12f1e8f9e1323b Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:48:33.582708   77261 settings.go:150] Updating kubeconfig:  /home/dev/.kube/config
I0331 11:48:33.583590   77261 lock.go:35] WriteFile acquiring /home/dev/.kube/config: {Name:mk6489cad160266c7fb18ddf2fb5d6083d113de1 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0331 11:48:33.584026   77261 start.go:235] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0331 11:48:33.584305   77261 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0331 11:48:33.584503   77261 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.32.0
I0331 11:48:33.584531   77261 addons.go:511] enable addons start: toEnable=map[ambassador:false amd-gpu-device-plugin:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volcano:false volumesnapshots:false yakd:false]
I0331 11:48:33.584568   77261 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0331 11:48:33.584578   77261 addons.go:238] Setting addon storage-provisioner=true in "minikube"
I0331 11:48:33.584608   77261 host.go:66] Checking if "minikube" exists ...
I0331 11:48:33.585342   77261 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0331 11:48:33.588947   77261 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0331 11:48:33.588957   77261 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0331 11:48:33.590100   77261 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0331 11:48:33.613744   77261 out.go:177] 🔎  Verifying Kubernetes components...
I0331 11:48:33.687767   77261 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0331 11:48:33.731424   77261 addons.go:238] Setting addon default-storageclass=true in "minikube"
I0331 11:48:33.731448   77261 host.go:66] Checking if "minikube" exists ...
I0331 11:48:33.731708   77261 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0331 11:48:33.745935   77261 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0331 11:48:33.755022   77261 addons.go:435] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0331 11:48:33.755031   77261 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0331 11:48:33.755088   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:48:33.893752   77261 addons.go:435] installing /etc/kubernetes/addons/storageclass.yaml
I0331 11:48:33.893764   77261 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0331 11:48:33.893822   77261 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0331 11:48:33.914976   77261 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32783 SSHKeyPath:/home/dev/.minikube/machines/minikube/id_rsa Username:docker}
I0331 11:48:33.971596   77261 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:32783 SSHKeyPath:/home/dev/.minikube/machines/minikube/id_rsa Username:docker}
I0331 11:48:34.130109   77261 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.49.1 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.32.0/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0331 11:48:34.167107   77261 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0331 11:48:34.280017   77261 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0331 11:48:34.336257   77261 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0331 11:48:34.977829   77261 api_server.go:52] waiting for apiserver process to appear ...
I0331 11:48:34.977867   77261 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0331 11:48:34.979767   77261 start.go:971] {"host.minikube.internal": 192.168.49.1} host record injected into CoreDNS's ConfigMap
I0331 11:48:35.510947   77261 kapi.go:214] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0331 11:48:36.218408   77261 ssh_runner.go:235] Completed: sudo pgrep -xnf kube-apiserver.*minikube.*: (1.240521802s)
I0331 11:48:36.218647   77261 api_server.go:72] duration metric: took 2.634602883s to wait for apiserver process to appear ...
I0331 11:48:36.218651   77261 api_server.go:88] waiting for apiserver healthz status ...
I0331 11:48:36.218667   77261 api_server.go:253] Checking apiserver healthz at https://192.168.49.2:8443/healthz ...
I0331 11:48:36.220454   77261 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.32.0/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: (1.884181528s)
I0331 11:48:36.226609   77261 out.go:177] 🌟  Enabled addons: default-storageclass, storage-provisioner
I0331 11:48:36.233734   77261 addons.go:514] duration metric: took 2.649196612s for enable addons: enabled=[default-storageclass storage-provisioner]
I0331 11:48:36.333533   77261 api_server.go:279] https://192.168.49.2:8443/healthz returned 200:
ok
I0331 11:48:36.337651   77261 api_server.go:141] control plane version: v1.32.0
I0331 11:48:36.337666   77261 api_server.go:131] duration metric: took 119.010342ms to wait for apiserver health ...
I0331 11:48:36.337672   77261 system_pods.go:43] waiting for kube-system pods to appear ...
I0331 11:48:36.416774   77261 system_pods.go:59] 8 kube-system pods found
I0331 11:48:36.416792   77261 system_pods.go:61] "coredns-668d6bf9bc-46xv7" [cef72c43-57dd-4c02-8a64-19e5f6fd0bc0] Pending / Ready:ContainersNotReady (containers with unready status: [coredns]) / ContainersReady:ContainersNotReady (containers with unready status: [coredns])
I0331 11:48:36.416796   77261 system_pods.go:61] "coredns-668d6bf9bc-fzcx6" [7061c46e-8f22-41c6-b71b-0d2ee0037d86] Pending / Ready:ContainersNotReady (containers with unready status: [coredns]) / ContainersReady:ContainersNotReady (containers with unready status: [coredns])
I0331 11:48:36.416800   77261 system_pods.go:61] "etcd-minikube" [cf021689-decb-4290-b4aa-3b1b4f433e78] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0331 11:48:36.416804   77261 system_pods.go:61] "kube-apiserver-minikube" [afe4d7ff-c13a-42b4-9ac2-24b40cdd3137] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0331 11:48:36.416808   77261 system_pods.go:61] "kube-controller-manager-minikube" [5499c9ca-fe80-4c5f-ad11-3122ea85aa76] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0331 11:48:36.416811   77261 system_pods.go:61] "kube-proxy-w5l69" [73abd0b8-1e9a-4eda-967b-109365fa454d] Pending / Ready:ContainersNotReady (containers with unready status: [kube-proxy]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-proxy])
I0331 11:48:36.416813   77261 system_pods.go:61] "kube-scheduler-minikube" [c8810c4e-2d6c-48b9-8ecf-5682962dfb25] Running
I0331 11:48:36.416815   77261 system_pods.go:61] "storage-provisioner" [4dbae848-e66e-4693-9bac-be12641f0678] Pending
I0331 11:48:36.416819   77261 system_pods.go:74] duration metric: took 79.143821ms to wait for pod list to return data ...
I0331 11:48:36.416936   77261 kubeadm.go:582] duration metric: took 2.832890036s to wait for: map[apiserver:true system_pods:true]
I0331 11:48:36.416948   77261 node_conditions.go:102] verifying NodePressure condition ...
I0331 11:48:36.449290   77261 node_conditions.go:122] node storage ephemeral capacity is 71150744Ki
I0331 11:48:36.449322   77261 node_conditions.go:123] node cpu capacity is 2
I0331 11:48:36.449331   77261 node_conditions.go:105] duration metric: took 32.38095ms to run NodePressure ...
I0331 11:48:36.449342   77261 start.go:241] waiting for startup goroutines ...
I0331 11:48:36.449346   77261 start.go:246] waiting for cluster config update ...
I0331 11:48:36.449354   77261 start.go:255] writing updated cluster config ...
I0331 11:48:36.449611   77261 ssh_runner.go:195] Run: rm -f paused
I0331 11:48:39.266703   77261 start.go:600] kubectl: 1.32.3, cluster: 1.32.0 (minor skew: 0)
I0331 11:48:39.299330   77261 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Mar 31 08:48:01 minikube dockerd[920]: time="2025-03-31T08:48:01.453269360Z" level=info msg="Daemon has completed initialization"
Mar 31 08:48:01 minikube dockerd[920]: time="2025-03-31T08:48:01.511635107Z" level=info msg="API listen on /var/run/docker.sock"
Mar 31 08:48:01 minikube dockerd[920]: time="2025-03-31T08:48:01.512046384Z" level=info msg="API listen on [::]:2376"
Mar 31 08:48:01 minikube dockerd[920]: time="2025-03-31T08:48:01.514215014Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Mar 31 08:48:01 minikube dockerd[920]: time="2025-03-31T08:48:01.514912644Z" level=info msg="Daemon shutdown complete"
Mar 31 08:48:01 minikube systemd[1]: docker.service: Deactivated successfully.
Mar 31 08:48:01 minikube systemd[1]: Stopped Docker Application Container Engine.
Mar 31 08:48:01 minikube systemd[1]: Starting Docker Application Container Engine...
Mar 31 08:48:01 minikube dockerd[1182]: time="2025-03-31T08:48:01.586654237Z" level=info msg="Starting up"
Mar 31 08:48:01 minikube dockerd[1182]: time="2025-03-31T08:48:01.588914864Z" level=info msg="OTEL tracing is not configured, using no-op tracer provider"
Mar 31 08:48:01 minikube dockerd[1182]: time="2025-03-31T08:48:01.636331743Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Mar 31 08:48:01 minikube dockerd[1182]: time="2025-03-31T08:48:01.674591723Z" level=info msg="Loading containers: start."
Mar 31 08:48:02 minikube dockerd[1182]: time="2025-03-31T08:48:02.191976416Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
Mar 31 08:48:02 minikube dockerd[1182]: time="2025-03-31T08:48:02.381878770Z" level=info msg="Loading containers: done."
Mar 31 08:48:02 minikube dockerd[1182]: time="2025-03-31T08:48:02.414566435Z" level=info msg="Docker daemon" commit=c710b88 containerd-snapshotter=false storage-driver=overlay2 version=27.4.1
Mar 31 08:48:02 minikube dockerd[1182]: time="2025-03-31T08:48:02.414849925Z" level=info msg="Daemon has completed initialization"
Mar 31 08:48:02 minikube dockerd[1182]: time="2025-03-31T08:48:02.455315564Z" level=info msg="API listen on /var/run/docker.sock"
Mar 31 08:48:02 minikube dockerd[1182]: time="2025-03-31T08:48:02.455748906Z" level=info msg="API listen on [::]:2376"
Mar 31 08:48:02 minikube systemd[1]: Started Docker Application Container Engine.
Mar 31 08:48:03 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Starting cri-dockerd dev (HEAD)"
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Start docker client with request timeout 0s"
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Hairpin mode is set to hairpin-veth"
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Loaded network plugin cni"
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Docker cri networking managed by network plugin cni"
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Setting cgroupDriver systemd"
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Mar 31 08:48:04 minikube cri-dockerd[1449]: time="2025-03-31T08:48:04Z" level=info msg="Start cri-dockerd grpc backend"
Mar 31 08:48:04 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Mar 31 08:48:15 minikube cri-dockerd[1449]: time="2025-03-31T08:48:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/99ea36c9c6f5a2cce191f107d1394e947ab9c7f579eff9c082b855b439fcfb2b/resolv.conf as [nameserver 192.168.49.1 search Home options edns0 trust-ad ndots:0]"
Mar 31 08:48:15 minikube cri-dockerd[1449]: time="2025-03-31T08:48:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/18514643144f8ab369124d1b023fa932e9ab88abf04ec04e55fff11c3352dcab/resolv.conf as [nameserver 192.168.49.1 search Home options trust-ad ndots:0 edns0]"
Mar 31 08:48:15 minikube cri-dockerd[1449]: time="2025-03-31T08:48:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/80b59ca55a338b7aa0f6b3deadedf1c5f5a50fcf0e9558656a5412bf514765f9/resolv.conf as [nameserver 192.168.49.1 search Home options trust-ad ndots:0 edns0]"
Mar 31 08:48:15 minikube cri-dockerd[1449]: time="2025-03-31T08:48:15Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/4f9112f6cc6cc355ed979ea7f9282de49b023ca555f160fa16eb8ba110662a3e/resolv.conf as [nameserver 192.168.49.1 search Home options edns0 trust-ad ndots:0]"
Mar 31 08:48:36 minikube cri-dockerd[1449]: time="2025-03-31T08:48:36Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/ab41541f4d03c01bcc821e4cefd676720f8a2091e1fd9f84674143f2dd14e58b/resolv.conf as [nameserver 192.168.49.1 search Home options ndots:0 edns0 trust-ad]"
Mar 31 08:48:37 minikube cri-dockerd[1449]: time="2025-03-31T08:48:37Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/084eda7cb77752eb680fcc78285af03f797a6c3cbd74c5d1915ab635e8178720/resolv.conf as [nameserver 192.168.49.1 search Home options edns0 trust-ad ndots:0]"
Mar 31 08:48:37 minikube cri-dockerd[1449]: time="2025-03-31T08:48:37Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/d50055155b07e9e1cda3e7e65d27ec54a99f13271a888bab6cb94ada758e3e80/resolv.conf as [nameserver 192.168.49.1 search Home options edns0 trust-ad ndots:0]"
Mar 31 08:48:37 minikube cri-dockerd[1449]: time="2025-03-31T08:48:37Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/2a8c67eda8f1259d7b2ddebde33867415e0e73a88b743a87a7613d887fd10957/resolv.conf as [nameserver 192.168.49.1 search Home options trust-ad ndots:0 edns0]"
Mar 31 08:48:41 minikube cri-dockerd[1449]: time="2025-03-31T08:48:41Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Mar 31 08:49:10 minikube dockerd[1182]: time="2025-03-31T08:49:10.375625404Z" level=info msg="Container failed to exit within 30s of signal 15 - using the force" container=0346cc1c01b1a86b2edc0decb939b38cc64d879f49cfa8c78bcd65312e92259a
Mar 31 08:49:10 minikube dockerd[1182]: time="2025-03-31T08:49:10.461187718Z" level=info msg="ignoring event" container=0346cc1c01b1a86b2edc0decb939b38cc64d879f49cfa8c78bcd65312e92259a module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Mar 31 08:49:10 minikube dockerd[1182]: time="2025-03-31T08:49:10.836874555Z" level=info msg="ignoring event" container=d50055155b07e9e1cda3e7e65d27ec54a99f13271a888bab6cb94ada758e3e80 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Mar 31 08:49:11 minikube dockerd[1182]: time="2025-03-31T08:49:11.831186676Z" level=info msg="ignoring event" container=b490001d880badf527b651784528902aa3a6d8f4e9ceeb3b9f2bf4fa4240861b module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Mar 31 09:12:36 minikube cri-dockerd[1449]: time="2025-03-31T09:12:36Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/7552edad0a9e75e8232e18cc1c671c8071b1a290a2794783de9b61851351ff6b/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local Home options ndots:5]"
Mar 31 09:12:36 minikube cri-dockerd[1449]: time="2025-03-31T09:12:36Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/d7c43fd74c9c1d5d4ffdcbf9adb16283fa0be0c94559b4af806e1cf9105f823d/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local Home options ndots:5]"
Mar 31 09:12:40 minikube cri-dockerd[1449]: time="2025-03-31T09:12:40Z" level=info msg="Stop pulling image busybox:latest: Status: Downloaded newer image for busybox:latest"
Mar 31 09:12:41 minikube dockerd[1182]: time="2025-03-31T09:12:41.499522309Z" level=info msg="ignoring event" container=05ff15f8d1fcbc40350ab2d87e9204d1c14466ca0dc933357581c41eaa4e243a module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Mar 31 09:12:42 minikube cri-dockerd[1449]: time="2025-03-31T09:12:42Z" level=info msg="Stop pulling image busybox:latest: Status: Image is up to date for busybox:latest"
Mar 31 09:12:42 minikube dockerd[1182]: time="2025-03-31T09:12:42.535298251Z" level=info msg="ignoring event" container=1b3bb4f950d66063269013833650afb5937ac9ddd56d1a14aa84eb4874c49662 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Mar 31 09:13:05 minikube cri-dockerd[1449]: time="2025-03-31T09:13:05Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/ffa673380622106d7adc8383690eae0642ab5b06df94d7bfc27a225545a213c9/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local Home options ndots:5]"
Mar 31 09:13:17 minikube cri-dockerd[1449]: time="2025-03-31T09:13:17Z" level=info msg="Pulling image mongo:latest: dacd77ad2ef6: Extracting [>                                                  ]  5.014MB/253.7MB"
Mar 31 09:13:27 minikube cri-dockerd[1449]: time="2025-03-31T09:13:27Z" level=info msg="Pulling image mongo:latest: dacd77ad2ef6: Extracting [=========================>                         ]  128.7MB/253.7MB"
Mar 31 09:13:37 minikube cri-dockerd[1449]: time="2025-03-31T09:13:37Z" level=info msg="Pulling image mongo:latest: dacd77ad2ef6: Extracting [==========================================>        ]  216.7MB/253.7MB"
Mar 31 09:13:40 minikube cri-dockerd[1449]: time="2025-03-31T09:13:40Z" level=info msg="Stop pulling image mongo:latest: Status: Downloaded newer image for mongo:latest"
Mar 31 09:13:44 minikube dockerd[1182]: time="2025-03-31T09:13:44.591104445Z" level=info msg="ignoring event" container=4c5b709f5dc6a3f36ceca2c8da4302b72b59bdb4c1f811f0deacae82f16560d0 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Mar 31 09:13:46 minikube cri-dockerd[1449]: time="2025-03-31T09:13:46Z" level=info msg="Stop pulling image mongo:latest: Status: Image is up to date for mongo:latest"
Mar 31 09:13:47 minikube dockerd[1182]: time="2025-03-31T09:13:47.446897145Z" level=info msg="ignoring event" container=883299ce479555681d37fe8488cab1a32aae70a6970e0a1b5a1a440794e94855 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Mar 31 09:13:59 minikube cri-dockerd[1449]: time="2025-03-31T09:13:59Z" level=info msg="Stop pulling image mongo:latest: Status: Image is up to date for mongo:latest"
Mar 31 09:14:00 minikube dockerd[1182]: time="2025-03-31T09:14:00.600966405Z" level=info msg="ignoring event" container=c8afd8e0ddac81c4afd050c3b78635a19a2a3991faaa29570da0a5a4582c06f7 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"


==> container status <==
CONTAINER           IMAGE                                                                             CREATED              STATE               NAME                      ATTEMPT             POD ID              POD
c8afd8e0ddac8       mongo@sha256:1cb283500219e8fc0b61b328ea5a199a395a753d88b17351c58874fb425223cb     11 seconds ago       Exited              mongodb                   2                   ffa6733806221       mongodb-deployment-85cfc8d7c5-tjsnz
1b3bb4f950d66       busybox@sha256:37f7b378a29ceb4c551b1b5582e27747b855bbfaa73fa11914fe0df028dc581f   About a minute ago   Exited              init-myservice            0                   7552edad0a9e7       fastapi-deployment-cf4dc69bc-fw828
05ff15f8d1fcb       busybox@sha256:37f7b378a29ceb4c551b1b5582e27747b855bbfaa73fa11914fe0df028dc581f   About a minute ago   Exited              init-myservice            0                   d7c43fd74c9c1       fastapi-deployment-cf4dc69bc-kktpf
eab863de5b358       6e38f40d628db                                                                     24 minutes ago       Running             storage-provisioner       1                   2a8c67eda8f12       storage-provisioner
6bdff8cc748ff       c69fa2e9cbf5f                                                                     25 minutes ago       Running             coredns                   0                   084eda7cb7775       coredns-668d6bf9bc-46xv7
b490001d880ba       6e38f40d628db                                                                     25 minutes ago       Exited              storage-provisioner       0                   2a8c67eda8f12       storage-provisioner
5b7cbbe3de1fd       040f9f8aac8cd                                                                     25 minutes ago       Running             kube-proxy                0                   ab41541f4d03c       kube-proxy-w5l69
fb983edf578b9       a389e107f4ff1                                                                     25 minutes ago       Running             kube-scheduler            0                   4f9112f6cc6cc       kube-scheduler-minikube
48fb66d865343       c2e17b8d0f4a3                                                                     25 minutes ago       Running             kube-apiserver            0                   18514643144f8       kube-apiserver-minikube
82d5c2f233d17       8cab3d2a8bd0f                                                                     25 minutes ago       Running             kube-controller-manager   0                   80b59ca55a338       kube-controller-manager-minikube
d7214158644f6       a9e7e6b294baf                                                                     25 minutes ago       Running             etcd                      0                   99ea36c9c6f5a       etcd-minikube


==> coredns [6bdff8cc748f] <==
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[INFO] plugin/kubernetes: waiting for Kubernetes API before starting server
[WARNING] plugin/kubernetes: starting server with unsynced Kubernetes API
.:53
[INFO] plugin/reload: Running configuration SHA512 = 9e2996f8cb67ac53e0259ab1f8d615d07d1beb0bd07e6a1e39769c3bf486a905bb991cc47f8d2f14d0d3a90a87dfc625a0b4c524fed169d8158c40657c0694b1
CoreDNS-1.11.3
linux/amd64, go1.21.11, a6338e9
[INFO] 127.0.0.1:39064 - 63550 "HINFO IN 7289142941027297160.768976987604766855. udp 56 false 512" NXDOMAIN qr,rd,ra 131 0.124946173s
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/ready: Still waiting on: "kubernetes"
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[132312242]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (31-Mar-2025 08:48:44.237) (total time: 30000ms):
Trace[132312242]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30000ms (08:49:14.238)
Trace[132312242]: [30.00061935s] [30.00061935s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.Service: failed to list *v1.Service: Get "https://10.96.0.1:443/api/v1/services?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[1235215282]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (31-Mar-2025 08:48:44.222) (total time: 30015ms):
Trace[1235215282]: ---"Objects listed" error:Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30015ms (08:49:14.238)
Trace[1235215282]: [30.015631417s] [30.015631417s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.EndpointSlice: failed to list *v1.EndpointSlice: Get "https://10.96.0.1:443/apis/discovery.k8s.io/v1/endpointslices?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout
[INFO] plugin/kubernetes: Trace[965594615]: "Reflector ListAndWatch" name:pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229 (31-Mar-2025 08:48:44.222) (total time: 30025ms):
Trace[965594615]: ---"Objects listed" error:Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout 30025ms (08:49:14.248)
Trace[965594615]: [30.025130215s] [30.025130215s] END
[ERROR] plugin/kubernetes: pkg/mod/k8s.io/client-go@v0.29.3/tools/cache/reflector.go:229: Failed to watch *v1.Namespace: failed to list *v1.Namespace: Get "https://10.96.0.1:443/api/v1/namespaces?limit=500&resourceVersion=0": dial tcp 10.96.0.1:443: i/o timeout


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=dd5d320e41b5451cdf3c01891bc4e13d189586ed-dirty
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2025_03_31T11_48_31_0700
                    minikube.k8s.io/version=v1.35.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Mon, 31 Mar 2025 08:48:22 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Mon, 31 Mar 2025 09:14:03 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Mon, 31 Mar 2025 09:14:03 +0000   Mon, 31 Mar 2025 08:48:20 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Mon, 31 Mar 2025 09:14:03 +0000   Mon, 31 Mar 2025 08:48:20 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Mon, 31 Mar 2025 09:14:03 +0000   Mon, 31 Mar 2025 08:48:20 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Mon, 31 Mar 2025 09:14:03 +0000   Mon, 31 Mar 2025 08:48:23 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                2
  ephemeral-storage:  71150744Ki
  hugepages-2Mi:      0
  memory:             4010512Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  71150744Ki
  hugepages-2Mi:      0
  memory:             4010512Ki
  pods:               110
System Info:
  Machine ID:                 cd1f08da2c1d4e178cc7edadb6b8a06e
  System UUID:                39e6991b-3d57-4579-95f8-b3052d416526
  Boot ID:                    962b231e-27c6-4265-9cc2-da8c4826f03d
  Kernel Version:             6.8.0-52-generic
  OS Image:                   Ubuntu 22.04.5 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://27.4.1
  Kubelet Version:            v1.32.0
  Kube-Proxy Version:         v1.32.0
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (10 in total)
  Namespace                   Name                                   CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                   ------------  ----------  ---------------  -------------  ---
  default                     fastapi-deployment-cf4dc69bc-fw828     0 (0%)        0 (0%)      0 (0%)           0 (0%)         97s
  default                     fastapi-deployment-cf4dc69bc-kktpf     0 (0%)        0 (0%)      0 (0%)           0 (0%)         97s
  default                     mongodb-deployment-85cfc8d7c5-tjsnz    0 (0%)        0 (0%)      0 (0%)           0 (0%)         67s
  kube-system                 coredns-668d6bf9bc-46xv7               100m (5%)     0 (0%)      70Mi (1%)        170Mi (4%)     25m
  kube-system                 etcd-minikube                          100m (5%)     0 (0%)      100Mi (2%)       0 (0%)         25m
  kube-system                 kube-apiserver-minikube                250m (12%)    0 (0%)      0 (0%)           0 (0%)         25m
  kube-system                 kube-controller-manager-minikube       200m (10%)    0 (0%)      0 (0%)           0 (0%)         25m
  kube-system                 kube-proxy-w5l69                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         25m
  kube-system                 kube-scheduler-minikube                100m (5%)     0 (0%)      0 (0%)           0 (0%)         25m
  kube-system                 storage-provisioner                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         25m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (37%)  0 (0%)
  memory             170Mi (4%)  170Mi (4%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type    Reason                   Age                From             Message
  ----    ------                   ----               ----             -------
  Normal  Starting                 25m                kube-proxy       
  Normal  NodeHasSufficientMemory  25m (x8 over 25m)  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    25m (x8 over 25m)  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     25m (x7 over 25m)  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  Starting                 25m                kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  25m                kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  25m                kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    25m                kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     25m                kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  RegisteredNode           25m                node-controller  Node minikube event: Registered Node minikube in Controller


==> dmesg <==
[Mar31 07:48] [Firmware Bug]: TSC doesn't count with P0 frequency!
[  +0.000000] Speculative Return Stack Overflow: IBPB-extending microcode not applied!
[  +0.000001] Speculative Return Stack Overflow: WARNING: See https://kernel.org/doc/html/latest/admin-guide/hw-vuln/srso.html for mitigation options.
[  +1.126483] device-mapper: core: CONFIG_IMA_DISABLE_HTABLE is disabled. Duplicate IMA measurements will not be recorded in the IMA log.
[  +0.000000] platform eisa.0: EISA: Cannot allocate resource for mainboard
[  +0.000000] platform eisa.0: Cannot allocate resource for EISA slot 1
[  +0.000000] platform eisa.0: Cannot allocate resource for EISA slot 2
[  +0.000000] platform eisa.0: Cannot allocate resource for EISA slot 3
[  +0.000000] platform eisa.0: Cannot allocate resource for EISA slot 4
[  +0.000000] platform eisa.0: Cannot allocate resource for EISA slot 5
[  +0.000000] platform eisa.0: Cannot allocate resource for EISA slot 6
[  +0.000000] platform eisa.0: Cannot allocate resource for EISA slot 7
[  +0.000000] platform eisa.0: Cannot allocate resource for EISA slot 8
[  +0.000000] amd_pstate: the _CPC object is not present in SBIOS or ACPI disabled
[  +5.829807] block sda: the capability attribute has been deprecated.
[  +0.406729] systemd[1]: Configuration file /run/systemd/system/netplan-ovs-cleanup.service is marked world-inaccessible. This has no effect as configuration data is accessible via APIs without restrictions. Proceeding anyway.
[  +0.143176] systemd[1]: /lib/systemd/system/snapd.service:23: Unknown key name 'RestartMode' in section 'Service', ignoring.
[  +0.979742] systemd-journald[207]: File /var/log/journal/69dcd1d8fba74851baf9e72aca0692fa/system.journal corrupted or uncleanly shut down, renaming and replacing.
[  +0.350108] vmwgfx 0000:00:02.0: [drm] *ERROR* vmwgfx seems to be running on an unsupported hypervisor.
[  +0.000002] vmwgfx 0000:00:02.0: [drm] *ERROR* This configuration is likely broken.
[  +0.000001] vmwgfx 0000:00:02.0: [drm] *ERROR* Please switch to a supported graphics device to avoid problems.
[  +2.672594] workqueue: drm_fb_helper_damage_work hogged CPU for >10000us 4 times, consider switching to WQ_UNBOUND
[  +0.530925] workqueue: drm_fb_helper_damage_work hogged CPU for >10000us 8 times, consider switching to WQ_UNBOUND
[ +11.946328] kauditd_printk_skb: 57 callbacks suppressed
[Mar31 07:49] workqueue: blk_mq_run_work_fn hogged CPU for >10000us 4 times, consider switching to WQ_UNBOUND
[Mar31 07:50] clocksource: Long readout interval, skipping watchdog check: cs_nsec: 1303799806 wd_nsec: 1303799216
[Mar31 07:51] workqueue: blk_mq_run_work_fn hogged CPU for >10000us 8 times, consider switching to WQ_UNBOUND
[Mar31 07:53] kauditd_printk_skb: 10 callbacks suppressed
[Mar31 07:54] kauditd_printk_skb: 8 callbacks suppressed
[Mar31 08:03] workqueue: blk_mq_run_work_fn hogged CPU for >10000us 16 times, consider switching to WQ_UNBOUND
[Mar31 08:11] clocksource: Long readout interval, skipping watchdog check: cs_nsec: 3421790113 wd_nsec: 3421788578
[Mar31 08:16] workqueue: blk_mq_requeue_work hogged CPU for >10000us 4 times, consider switching to WQ_UNBOUND
[Mar31 08:37] workqueue: blk_mq_requeue_work hogged CPU for >10000us 8 times, consider switching to WQ_UNBOUND
[Mar31 08:47] workqueue: blk_mq_run_work_fn hogged CPU for >10000us 32 times, consider switching to WQ_UNBOUND


==> etcd [d7214158644f] <==
{"level":"info","ts":"2025-03-31T09:03:18.797703Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":896}
{"level":"info","ts":"2025-03-31T09:03:18.803677Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":896,"took":"5.789383ms","hash":1553188033,"current-db-size-bytes":2105344,"current-db-size":"2.1 MB","current-db-size-in-use-bytes":1462272,"current-db-size-in-use":"1.5 MB"}
{"level":"info","ts":"2025-03-31T09:03:18.803761Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":1553188033,"revision":896,"compact-revision":657}
{"level":"info","ts":"2025-03-31T09:08:18.812660Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1134}
{"level":"info","ts":"2025-03-31T09:08:18.823287Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":1134,"took":"10.103658ms","hash":3971224337,"current-db-size-bytes":2105344,"current-db-size":"2.1 MB","current-db-size-in-use-bytes":1478656,"current-db-size-in-use":"1.5 MB"}
{"level":"info","ts":"2025-03-31T09:08:18.823562Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":3971224337,"revision":1134,"compact-revision":896}
{"level":"info","ts":"2025-03-31T09:09:15.178970Z","caller":"traceutil/trace.go:171","msg":"trace[901632794] transaction","detail":"{read_only:false; response_revision:1417; number_of_response:1; }","duration":"215.685062ms","start":"2025-03-31T09:09:14.963269Z","end":"2025-03-31T09:09:15.178954Z","steps":["trace[901632794] 'process raft request'  (duration: 215.589631ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:09:17.418378Z","caller":"traceutil/trace.go:171","msg":"trace[1211086302] transaction","detail":"{read_only:false; response_revision:1419; number_of_response:1; }","duration":"182.588339ms","start":"2025-03-31T09:09:17.235771Z","end":"2025-03-31T09:09:17.418359Z","steps":["trace[1211086302] 'process raft request'  (duration: 182.485329ms)"],"step_count":1}
{"level":"warn","ts":"2025-03-31T09:09:28.778313Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"189.558399ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128036265710149721 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/masterleases/192.168.49.2\" mod_revision:1420 > success:<request_put:<key:\"/registry/masterleases/192.168.49.2\" value_size:65 lease:8128036265710149719 >> failure:<request_range:<key:\"/registry/masterleases/192.168.49.2\" > >>","response":"size:16"}
{"level":"info","ts":"2025-03-31T09:09:28.778466Z","caller":"traceutil/trace.go:171","msg":"trace[328162959] transaction","detail":"{read_only:false; response_revision:1428; number_of_response:1; }","duration":"277.853763ms","start":"2025-03-31T09:09:28.500595Z","end":"2025-03-31T09:09:28.778449Z","steps":["trace[328162959] 'process raft request'  (duration: 88.099663ms)","trace[328162959] 'compare'  (duration: 130.233308ms)","trace[328162959] 'store kv pair into bolt db' {req_type:put; key:/registry/masterleases/192.168.49.2; req_size:114; } (duration: 59.251461ms)"],"step_count":3}
{"level":"info","ts":"2025-03-31T09:09:31.896269Z","caller":"traceutil/trace.go:171","msg":"trace[205883492] transaction","detail":"{read_only:false; response_revision:1431; number_of_response:1; }","duration":"125.533595ms","start":"2025-03-31T09:09:31.770719Z","end":"2025-03-31T09:09:31.896253Z","steps":["trace[205883492] 'process raft request'  (duration: 124.188067ms)"],"step_count":1}
{"level":"warn","ts":"2025-03-31T09:09:44.503999Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"205.359109ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" limit:1 ","response":"range_response_count:1 size:1109"}
{"level":"info","ts":"2025-03-31T09:09:44.504061Z","caller":"traceutil/trace.go:171","msg":"trace[2141298357] range","detail":"{range_begin:/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath; range_end:; response_count:1; response_revision:1439; }","duration":"205.45723ms","start":"2025-03-31T09:09:44.298593Z","end":"2025-03-31T09:09:44.504050Z","steps":["trace[2141298357] 'range keys from bolt db'  (duration: 205.297899ms)"],"step_count":1}
{"level":"warn","ts":"2025-03-31T09:09:48.201325Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"730.025408ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128036265710149811 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/leases/kube-node-lease/minikube\" mod_revision:1434 > success:<request_put:<key:\"/registry/leases/kube-node-lease/minikube\" value_size:472 >> failure:<request_range:<key:\"/registry/leases/kube-node-lease/minikube\" > >>","response":"size:16"}
{"level":"info","ts":"2025-03-31T09:09:48.203990Z","caller":"traceutil/trace.go:171","msg":"trace[230452208] transaction","detail":"{read_only:false; response_revision:1442; number_of_response:1; }","duration":"798.258469ms","start":"2025-03-31T09:09:47.405703Z","end":"2025-03-31T09:09:48.203961Z","steps":["trace[230452208] 'process raft request'  (duration: 65.538535ms)","trace[230452208] 'compare'  (duration: 716.338658ms)","trace[230452208] 'store kv pair into bolt db' {req_type:put; key:/registry/leases/kube-node-lease/minikube; req_size:518; } (duration: 13.59679ms)"],"step_count":3}
{"level":"warn","ts":"2025-03-31T09:09:48.205429Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-03-31T09:09:47.405686Z","time spent":"799.694047ms","remote":"127.0.0.1:59520","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":521,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/leases/kube-node-lease/minikube\" mod_revision:1434 > success:<request_put:<key:\"/registry/leases/kube-node-lease/minikube\" value_size:472 >> failure:<request_range:<key:\"/registry/leases/kube-node-lease/minikube\" > >"}
{"level":"info","ts":"2025-03-31T09:09:48.204990Z","caller":"traceutil/trace.go:171","msg":"trace[1400564223] linearizableReadLoop","detail":"{readStateIndex:1719; appliedIndex:1718; }","duration":"360.270084ms","start":"2025-03-31T09:09:47.844709Z","end":"2025-03-31T09:09:48.204979Z","steps":["trace[1400564223] 'read index received'  (duration: 39.04µs)","trace[1400564223] 'applied index is now lower than readState.Index'  (duration: 360.229994ms)"],"step_count":2}
{"level":"warn","ts":"2025-03-31T09:09:48.205046Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"360.323094ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-03-31T09:09:48.206042Z","caller":"traceutil/trace.go:171","msg":"trace[50323833] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:1442; }","duration":"361.35047ms","start":"2025-03-31T09:09:47.844685Z","end":"2025-03-31T09:09:48.206036Z","steps":["trace[50323833] 'agreement among raft nodes before linearized reading'  (duration: 360.319784ms)"],"step_count":1}
{"level":"warn","ts":"2025-03-31T09:09:48.206064Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-03-31T09:09:47.844670Z","time spent":"361.38555ms","remote":"127.0.0.1:59266","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":29,"request content":"key:\"/registry/health\" "}
{"level":"warn","ts":"2025-03-31T09:09:48.206435Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"165.942787ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/apiregistration.k8s.io/apiservices/\" range_end:\"/registry/apiregistration.k8s.io/apiservices0\" count_only:true ","response":"range_response_count:0 size:7"}
{"level":"info","ts":"2025-03-31T09:09:48.206952Z","caller":"traceutil/trace.go:171","msg":"trace[1707675760] range","detail":"{range_begin:/registry/apiregistration.k8s.io/apiservices/; range_end:/registry/apiregistration.k8s.io/apiservices0; response_count:0; response_revision:1442; }","duration":"166.776491ms","start":"2025-03-31T09:09:48.040168Z","end":"2025-03-31T09:09:48.206944Z","steps":["trace[1707675760] 'agreement among raft nodes before linearized reading'  (duration: 166.240678ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:12:34.724167Z","caller":"traceutil/trace.go:171","msg":"trace[937636587] linearizableReadLoop","detail":"{readStateIndex:1910; appliedIndex:1908; }","duration":"156.458445ms","start":"2025-03-31T09:12:34.567698Z","end":"2025-03-31T09:12:34.724157Z","steps":["trace[937636587] 'read index received'  (duration: 29.556071ms)","trace[937636587] 'applied index is now lower than readState.Index'  (duration: 126.902004ms)"],"step_count":2}
{"level":"warn","ts":"2025-03-31T09:12:34.724315Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"156.599935ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/flowschemas/\" range_end:\"/registry/flowschemas0\" count_only:true ","response":"range_response_count:0 size:7"}
{"level":"info","ts":"2025-03-31T09:12:34.724354Z","caller":"traceutil/trace.go:171","msg":"trace[18359333] range","detail":"{range_begin:/registry/flowschemas/; range_end:/registry/flowschemas0; response_count:0; response_revision:1598; }","duration":"156.668696ms","start":"2025-03-31T09:12:34.567676Z","end":"2025-03-31T09:12:34.724345Z","steps":["trace[18359333] 'agreement among raft nodes before linearized reading'  (duration: 156.581766ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:12:34.724455Z","caller":"traceutil/trace.go:171","msg":"trace[1649502596] transaction","detail":"{read_only:false; response_revision:1597; number_of_response:1; }","duration":"173.050904ms","start":"2025-03-31T09:12:34.551398Z","end":"2025-03-31T09:12:34.724449Z","steps":["trace[1649502596] 'process raft request'  (duration: 110.212093ms)","trace[1649502596] 'compare'  (duration: 62.437679ms)"],"step_count":2}
{"level":"info","ts":"2025-03-31T09:12:34.724534Z","caller":"traceutil/trace.go:171","msg":"trace[766792149] transaction","detail":"{read_only:false; response_revision:1598; number_of_response:1; }","duration":"173.095234ms","start":"2025-03-31T09:12:34.551434Z","end":"2025-03-31T09:12:34.724529Z","steps":["trace[766792149] 'process raft request'  (duration: 172.697893ms)"],"step_count":1}
{"level":"warn","ts":"2025-03-31T09:13:12.185352Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"357.038405ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128036265710150903 username:\"kube-apiserver-etcd-client\" auth_revision:1 > txn:<compare:<target:MOD key:\"/registry/events/default/fastapi-deployment-cf4dc69bc-fw828.1831d84e9d466b4c\" mod_revision:1647 > success:<request_put:<key:\"/registry/events/default/fastapi-deployment-cf4dc69bc-fw828.1831d84e9d466b4c\" value_size:683 lease:8128036265710150623 >> failure:<request_range:<key:\"/registry/events/default/fastapi-deployment-cf4dc69bc-fw828.1831d84e9d466b4c\" > >>","response":"size:16"}
{"level":"info","ts":"2025-03-31T09:13:12.185418Z","caller":"traceutil/trace.go:171","msg":"trace[863245669] linearizableReadLoop","detail":"{readStateIndex:1999; appliedIndex:1998; }","duration":"342.090566ms","start":"2025-03-31T09:13:11.843317Z","end":"2025-03-31T09:13:12.185407Z","steps":["trace[863245669] 'read index received'  (duration: 492.773µs)","trace[863245669] 'applied index is now lower than readState.Index'  (duration: 341.597093ms)"],"step_count":2}
{"level":"info","ts":"2025-03-31T09:13:12.185461Z","caller":"traceutil/trace.go:171","msg":"trace[90559864] transaction","detail":"{read_only:false; response_revision:1679; number_of_response:1; }","duration":"469.356871ms","start":"2025-03-31T09:13:11.716100Z","end":"2025-03-31T09:13:12.185457Z","steps":["trace[90559864] 'process raft request'  (duration: 112.162775ms)","trace[90559864] 'compare'  (duration: 356.171951ms)"],"step_count":2}
{"level":"warn","ts":"2025-03-31T09:13:12.185485Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-03-31T09:13:11.716085Z","time spent":"469.386981ms","remote":"127.0.0.1:59334","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":777,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/events/default/fastapi-deployment-cf4dc69bc-fw828.1831d84e9d466b4c\" mod_revision:1647 > success:<request_put:<key:\"/registry/events/default/fastapi-deployment-cf4dc69bc-fw828.1831d84e9d466b4c\" value_size:683 lease:8128036265710150623 >> failure:<request_range:<key:\"/registry/events/default/fastapi-deployment-cf4dc69bc-fw828.1831d84e9d466b4c\" > >"}
{"level":"warn","ts":"2025-03-31T09:13:12.185824Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"342.505578ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-03-31T09:13:12.185842Z","caller":"traceutil/trace.go:171","msg":"trace[1376504197] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:1679; }","duration":"342.523638ms","start":"2025-03-31T09:13:11.843313Z","end":"2025-03-31T09:13:12.185837Z","steps":["trace[1376504197] 'agreement among raft nodes before linearized reading'  (duration: 342.456308ms)"],"step_count":1}
{"level":"warn","ts":"2025-03-31T09:13:12.185854Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-03-31T09:13:11.843277Z","time spent":"342.574758ms","remote":"127.0.0.1:59266","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":29,"request content":"key:\"/registry/health\" "}
{"level":"info","ts":"2025-03-31T09:13:12.398867Z","caller":"traceutil/trace.go:171","msg":"trace[1495376855] transaction","detail":"{read_only:false; response_revision:1680; number_of_response:1; }","duration":"198.135837ms","start":"2025-03-31T09:13:12.200706Z","end":"2025-03-31T09:13:12.398841Z","steps":["trace[1495376855] 'process raft request'  (duration: 134.704456ms)","trace[1495376855] 'compare'  (duration: 62.362136ms)"],"step_count":2}
{"level":"warn","ts":"2025-03-31T09:13:12.774403Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"103.699754ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/secrets/\" range_end:\"/registry/secrets0\" count_only:true ","response":"range_response_count:0 size:7"}
{"level":"info","ts":"2025-03-31T09:13:12.800774Z","caller":"traceutil/trace.go:171","msg":"trace[1280874341] range","detail":"{range_begin:/registry/secrets/; range_end:/registry/secrets0; response_count:0; response_revision:1681; }","duration":"103.945595ms","start":"2025-03-31T09:13:12.670659Z","end":"2025-03-31T09:13:12.774605Z","steps":["trace[1280874341] 'count revisions from in-memory index tree'  (duration: 103.652864ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:13:14.355009Z","caller":"traceutil/trace.go:171","msg":"trace[799678981] linearizableReadLoop","detail":"{readStateIndex:2004; appliedIndex:2003; }","duration":"180.784207ms","start":"2025-03-31T09:13:14.174209Z","end":"2025-03-31T09:13:14.354993Z","steps":["trace[799678981] 'read index received'  (duration: 180.644136ms)","trace[799678981] 'applied index is now lower than readState.Index'  (duration: 139.661µs)"],"step_count":2}
{"level":"warn","ts":"2025-03-31T09:13:14.355109Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"180.884037ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-03-31T09:13:14.355127Z","caller":"traceutil/trace.go:171","msg":"trace[1530895489] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:1683; }","duration":"180.916477ms","start":"2025-03-31T09:13:14.174205Z","end":"2025-03-31T09:13:14.355121Z","steps":["trace[1530895489] 'agreement among raft nodes before linearized reading'  (duration: 180.861447ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:13:14.355230Z","caller":"traceutil/trace.go:171","msg":"trace[1571595617] transaction","detail":"{read_only:false; response_revision:1683; number_of_response:1; }","duration":"201.008405ms","start":"2025-03-31T09:13:14.154214Z","end":"2025-03-31T09:13:14.355222Z","steps":["trace[1571595617] 'process raft request'  (duration: 200.679193ms)"],"step_count":1}
{"level":"warn","ts":"2025-03-31T09:13:18.862423Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-03-31T09:13:18.490858Z","time spent":"371.562847ms","remote":"127.0.0.1:59294","response type":"/etcdserverpb.Lease/LeaseGrant","request count":-1,"request size":-1,"response count":-1,"response size":-1,"request content":""}
{"level":"info","ts":"2025-03-31T09:13:18.862642Z","caller":"traceutil/trace.go:171","msg":"trace[1329117496] linearizableReadLoop","detail":"{readStateIndex:2007; appliedIndex:2007; }","duration":"235.75925ms","start":"2025-03-31T09:13:18.626873Z","end":"2025-03-31T09:13:18.862632Z","steps":["trace[1329117496] 'read index received'  (duration: 235.75674ms)","trace[1329117496] 'applied index is now lower than readState.Index'  (duration: 1.97µs)"],"step_count":2}
{"level":"warn","ts":"2025-03-31T09:13:18.862688Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"235.80149ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/horizontalpodautoscalers/\" range_end:\"/registry/horizontalpodautoscalers0\" count_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-03-31T09:13:18.862782Z","caller":"traceutil/trace.go:171","msg":"trace[1582607440] range","detail":"{range_begin:/registry/horizontalpodautoscalers/; range_end:/registry/horizontalpodautoscalers0; response_count:0; response_revision:1685; }","duration":"235.86907ms","start":"2025-03-31T09:13:18.626845Z","end":"2025-03-31T09:13:18.862714Z","steps":["trace[1582607440] 'agreement among raft nodes before linearized reading'  (duration: 235.81142ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:13:18.931183Z","caller":"traceutil/trace.go:171","msg":"trace[1791205056] transaction","detail":"{read_only:false; response_revision:1686; number_of_response:1; }","duration":"112.430421ms","start":"2025-03-31T09:13:18.818739Z","end":"2025-03-31T09:13:18.931169Z","steps":["trace[1791205056] 'process raft request'  (duration: 87.637658ms)","trace[1791205056] 'compare'  (duration: 23.343914ms)"],"step_count":2}
{"level":"info","ts":"2025-03-31T09:13:18.947528Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1374}
{"level":"info","ts":"2025-03-31T09:13:19.311651Z","caller":"mvcc/kvstore_compaction.go:72","msg":"finished scheduled compaction","compact-revision":1374,"took":"363.369278ms","hash":107182605,"current-db-size-bytes":2105344,"current-db-size":"2.1 MB","current-db-size-in-use-bytes":1867776,"current-db-size-in-use":"1.9 MB"}
{"level":"info","ts":"2025-03-31T09:13:19.311694Z","caller":"mvcc/hash.go:151","msg":"storing new hash","hash":107182605,"revision":1374,"compact-revision":1134}
{"level":"warn","ts":"2025-03-31T09:13:23.931182Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"237.23947ms","expected-duration":"100ms","prefix":"","request":"header:<ID:8128036265710150971 > lease_revoke:<id:70cc95eb632564e5>","response":"size:29"}
{"level":"warn","ts":"2025-03-31T09:13:24.379871Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"207.770717ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 serializable:true keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-03-31T09:13:24.384558Z","caller":"traceutil/trace.go:171","msg":"trace[1311139335] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:1695; }","duration":"212.458988ms","start":"2025-03-31T09:13:24.172074Z","end":"2025-03-31T09:13:24.384533Z","steps":["trace[1311139335] 'range keys from in-memory index tree'  (duration: 207.756277ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:13:24.483832Z","caller":"traceutil/trace.go:171","msg":"trace[295203491] transaction","detail":"{read_only:false; response_revision:1696; number_of_response:1; }","duration":"115.30238ms","start":"2025-03-31T09:13:24.368517Z","end":"2025-03-31T09:13:24.483819Z","steps":["trace[295203491] 'process raft request'  (duration: 114.961528ms)"],"step_count":1}
{"level":"warn","ts":"2025-03-31T09:13:25.082674Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"259.403275ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-03-31T09:13:25.085480Z","caller":"traceutil/trace.go:171","msg":"trace[21775867] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:1696; }","duration":"262.235379ms","start":"2025-03-31T09:13:24.823235Z","end":"2025-03-31T09:13:25.085470Z","steps":["trace[21775867] 'range keys from in-memory index tree'  (duration: 259.363585ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:13:31.769918Z","caller":"traceutil/trace.go:171","msg":"trace[828750433] transaction","detail":"{read_only:false; response_revision:1701; number_of_response:1; }","duration":"112.429991ms","start":"2025-03-31T09:13:31.657469Z","end":"2025-03-31T09:13:31.769899Z","steps":["trace[828750433] 'process raft request'  (duration: 112.34002ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:13:32.124769Z","caller":"traceutil/trace.go:171","msg":"trace[1617136709] transaction","detail":"{read_only:false; response_revision:1702; number_of_response:1; }","duration":"309.622124ms","start":"2025-03-31T09:13:31.815131Z","end":"2025-03-31T09:13:32.124753Z","steps":["trace[1617136709] 'process raft request'  (duration: 224.674512ms)","trace[1617136709] 'compare'  (duration: 84.722211ms)"],"step_count":2}
{"level":"warn","ts":"2025-03-31T09:13:32.124851Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-03-31T09:13:31.815115Z","time spent":"309.693386ms","remote":"127.0.0.1:59334","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":756,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/events/default/fastapi-deployment-cf4dc69bc-kktpf.1831d84e6045a5fa\" mod_revision:1689 > success:<request_put:<key:\"/registry/events/default/fastapi-deployment-cf4dc69bc-kktpf.1831d84e6045a5fa\" value_size:662 lease:8128036265710150623 >> failure:<request_range:<key:\"/registry/events/default/fastapi-deployment-cf4dc69bc-kktpf.1831d84e6045a5fa\" > >"}
{"level":"info","ts":"2025-03-31T09:13:42.669913Z","caller":"traceutil/trace.go:171","msg":"trace[214246838] transaction","detail":"{read_only:false; response_revision:1714; number_of_response:1; }","duration":"162.118163ms","start":"2025-03-31T09:13:42.507778Z","end":"2025-03-31T09:13:42.669896Z","steps":["trace[214246838] 'process raft request'  (duration: 162.009443ms)"],"step_count":1}
{"level":"info","ts":"2025-03-31T09:13:46.969676Z","caller":"traceutil/trace.go:171","msg":"trace[1056900232] transaction","detail":"{read_only:false; response_revision:1736; number_of_response:1; }","duration":"111.187432ms","start":"2025-03-31T09:13:46.858473Z","end":"2025-03-31T09:13:46.969660Z","steps":["trace[1056900232] 'process raft request'  (duration: 111.110842ms)"],"step_count":1}


==> kernel <==
 09:14:11 up  1:26,  0 users,  load average: 3.45, 2.73, 1.86
Linux minikube 6.8.0-52-generic #53~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Wed Jan 15 19:18:46 UTC 2 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.5 LTS"


==> kube-apiserver [48fb66d86534] <==
I0331 08:48:21.007687       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0331 08:48:21.007723       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0331 08:48:21.007821       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0331 08:48:21.009838       1 dynamic_serving_content.go:135] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0331 08:48:21.066173       1 local_available_controller.go:156] Starting LocalAvailability controller
I0331 08:48:21.066196       1 cache.go:32] Waiting for caches to sync for LocalAvailability controller
I0331 08:48:21.066421       1 system_namespaces_controller.go:66] Starting system namespaces controller
I0331 08:48:21.066441       1 remote_available_controller.go:411] Starting RemoteAvailability controller
I0331 08:48:21.066444       1 cache.go:32] Waiting for caches to sync for RemoteAvailability controller
I0331 08:48:21.117887       1 cluster_authentication_trust_controller.go:462] Starting cluster_authentication_trust_controller controller
I0331 08:48:21.119231       1 shared_informer.go:313] Waiting for caches to sync for cluster_authentication_trust_controller
I0331 08:48:21.119906       1 customresource_discovery_controller.go:292] Starting DiscoveryController
I0331 08:48:21.121750       1 controller.go:119] Starting legacy_token_tracking_controller
I0331 08:48:21.121874       1 shared_informer.go:313] Waiting for caches to sync for configmaps
I0331 08:48:21.276519       1 crdregistration_controller.go:114] Starting crd-autoregister controller
I0331 08:48:21.276631       1 shared_informer.go:313] Waiting for caches to sync for crd-autoregister
I0331 08:48:21.502621       1 controller.go:90] Starting OpenAPI V3 controller
I0331 08:48:21.502867       1 naming_controller.go:294] Starting NamingConditionController
I0331 08:48:21.503101       1 establishing_controller.go:81] Starting EstablishingController
I0331 08:48:21.503523       1 nonstructuralschema_controller.go:195] Starting NonStructuralSchemaConditionController
I0331 08:48:21.503564       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0331 08:48:21.503590       1 crd_finalizer.go:269] Starting CRDFinalizer
I0331 08:48:21.584303       1 controller.go:142] Starting OpenAPI controller
I0331 08:48:22.320199       1 apf_controller.go:382] Running API Priority and Fairness config worker
I0331 08:48:22.320345       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I0331 08:48:22.321540       1 shared_informer.go:320] Caches are synced for *generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]
I0331 08:48:22.321564       1 policy_source.go:240] refreshing policies
I0331 08:48:22.338341       1 shared_informer.go:320] Caches are synced for configmaps
I0331 08:48:22.375805       1 shared_informer.go:320] Caches are synced for node_authorizer
I0331 08:48:22.375840       1 shared_informer.go:320] Caches are synced for crd-autoregister
I0331 08:48:22.376250       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0331 08:48:22.408766       1 cache.go:39] Caches are synced for LocalAvailability controller
I0331 08:48:22.408911       1 cache.go:39] Caches are synced for RemoteAvailability controller
I0331 08:48:22.408981       1 shared_informer.go:320] Caches are synced for cluster_authentication_trust_controller
I0331 08:48:22.422714       1 aggregator.go:171] initial CRD sync complete...
I0331 08:48:22.422949       1 autoregister_controller.go:144] Starting autoregister controller
I0331 08:48:22.422959       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0331 08:48:22.422967       1 cache.go:39] Caches are synced for autoregister controller
I0331 08:48:22.423255       1 handler_discovery.go:451] Starting ResourceDiscoveryManager
I0331 08:48:22.446454       1 controller.go:615] quota admission added evaluator for: namespaces
I0331 08:48:22.917981       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
E0331 08:48:23.069434       1 controller.go:145] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
E0331 08:48:23.103246       1 controller.go:148] "Unhandled Error" err="while syncing ConfigMap \"kube-system/kube-apiserver-legacy-service-account-token-tracking\", err: namespaces \"kube-system\" not found" logger="UnhandledError"
I0331 08:48:23.558060       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0331 08:48:23.558275       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0331 08:48:23.717038       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
I0331 08:48:27.949190       1 controller.go:615] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0331 08:48:28.037449       1 controller.go:615] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0331 08:48:28.226773       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0331 08:48:28.288377       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0331 08:48:28.298828       1 controller.go:615] quota admission added evaluator for: endpoints
I0331 08:48:28.327198       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0331 08:48:28.843874       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0331 08:48:30.414932       1 controller.go:615] quota admission added evaluator for: deployments.apps
I0331 08:48:30.587125       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0331 08:48:30.644580       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I0331 08:48:34.209476       1 controller.go:615] quota admission added evaluator for: controllerrevisions.apps
I0331 08:48:34.442809       1 controller.go:615] quota admission added evaluator for: replicasets.apps
I0331 09:12:34.542613       1 alloc.go:330] "allocated clusterIPs" service="default/fastapi-service" clusterIPs={"IPv4":"10.111.115.18"}
I0331 09:13:04.403958       1 alloc.go:330] "allocated clusterIPs" service="default/mongodb-service" clusterIPs={"IPv4":"10.100.127.232"}


==> kube-controller-manager [82d5c2f233d1] <==
I0331 08:48:33.592972       1 node_lifecycle_controller.go:1080] "Controller detected that zone is now in new state" logger="node-lifecycle-controller" zone="" newState="Normal"
I0331 08:48:33.595164       1 shared_informer.go:320] Caches are synced for certificate-csrsigning-kubelet-serving
I0331 08:48:33.599153       1 shared_informer.go:320] Caches are synced for job
I0331 08:48:33.599264       1 shared_informer.go:320] Caches are synced for crt configmap
I0331 08:48:33.612594       1 shared_informer.go:313] Waiting for caches to sync for garbage collector
I0331 08:48:33.612682       1 shared_informer.go:320] Caches are synced for namespace
I0331 08:48:33.612726       1 shared_informer.go:320] Caches are synced for attach detach
I0331 08:48:33.612990       1 shared_informer.go:320] Caches are synced for PVC protection
I0331 08:48:33.620297       1 shared_informer.go:320] Caches are synced for ReplicaSet
I0331 08:48:33.631640       1 shared_informer.go:320] Caches are synced for resource quota
I0331 08:48:33.675227       1 range_allocator.go:428] "Set node PodCIDR" logger="node-ipam-controller" node="minikube" podCIDRs=["10.244.0.0/24"]
I0331 08:48:33.675488       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 08:48:33.675941       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 08:48:33.744480       1 shared_informer.go:320] Caches are synced for garbage collector
I0331 08:48:33.744512       1 garbagecollector.go:154] "Garbage collector: all resource monitors have synced" logger="garbage-collector-controller"
I0331 08:48:33.744519       1 garbagecollector.go:157] "Proceeding to collect garbage" logger="garbage-collector-controller"
I0331 08:48:33.814153       1 shared_informer.go:320] Caches are synced for garbage collector
I0331 08:48:34.070436       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 08:48:34.175691       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 08:48:35.328620       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="724.563744ms"
I0331 08:48:35.633617       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="304.711366ms"
I0331 08:48:35.848730       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="215.016105ms"
I0331 08:48:36.135143       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="286.374669ms"
I0331 08:48:36.135467       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="61.95µs"
I0331 08:48:36.135808       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="23.5µs"
I0331 08:48:40.447858       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="228.037µs"
I0331 08:48:40.527978       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="36.76µs"
I0331 08:48:41.198952       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 08:49:10.986648       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="160.85µs"
I0331 08:49:11.431941       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="58.95µs"
I0331 08:49:11.486860       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="54.3µs"
I0331 08:49:22.103819       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="27.898812ms"
I0331 08:49:22.104321       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="kube-system/coredns-668d6bf9bc" duration="37.1µs"
I0331 08:52:56.741084       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 08:58:03.621395       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 09:03:09.218484       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 09:08:15.404488       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 09:10:38.668092       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 09:12:34.497457       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/fastapi-deployment-cf4dc69bc" duration="165.484397ms"
I0331 09:12:34.542441       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/fastapi-deployment-cf4dc69bc" duration="44.824297ms"
I0331 09:12:34.542486       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/fastapi-deployment-cf4dc69bc" duration="20.32µs"
I0331 09:12:34.792312       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/fastapi-deployment-cf4dc69bc" duration="38.93µs"
I0331 09:12:34.933027       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/fastapi-deployment-cf4dc69bc" duration="40.13µs"
I0331 09:12:41.945621       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/fastapi-deployment-cf4dc69bc" duration="32.54µs"
I0331 09:12:42.970822       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/fastapi-deployment-cf4dc69bc" duration="37.521µs"
I0331 09:12:43.024348       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/fastapi-deployment-cf4dc69bc" duration="41.27µs"
I0331 09:12:43.962352       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/fastapi-deployment-cf4dc69bc" duration="41.621µs"
I0331 09:13:01.570710       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 09:13:04.239607       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="59.540975ms"
I0331 09:13:04.399278       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="159.575999ms"
I0331 09:13:04.399328       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="26.27µs"
I0331 09:13:43.679364       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="68.636072ms"
I0331 09:13:43.702437       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="42.46µs"
I0331 09:13:45.659244       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="22.569519ms"
I0331 09:13:45.659345       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="24.921µs"
I0331 09:13:47.686066       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="37µs"
I0331 09:13:58.688864       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="38.43µs"
I0331 09:14:00.934720       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="34.91µs"
I0331 09:14:03.160331       1 range_allocator.go:247] "Successfully synced" logger="node-ipam-controller" key="minikube"
I0331 09:14:11.708863       1 replica_set.go:679] "Finished syncing" logger="replicaset-controller" kind="ReplicaSet" key="default/mongodb-deployment-85cfc8d7c5" duration="1.769948ms"


==> kube-proxy [5b7cbbe3de1f] <==
I0331 08:48:43.721953       1 server_linux.go:66] "Using iptables proxy"
I0331 08:48:44.586917       1 server.go:698] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
E0331 08:48:44.587072       1 server.go:234] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I0331 08:48:44.702657       1 server.go:243] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0331 08:48:44.702911       1 server_linux.go:170] "Using iptables Proxier"
I0331 08:48:44.710665       1 proxier.go:255] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
I0331 08:48:44.749321       1 server.go:497] "Version info" version="v1.32.0"
I0331 08:48:44.749346       1 server.go:499] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0331 08:48:44.775948       1 config.go:199] "Starting service config controller"
I0331 08:48:44.783462       1 shared_informer.go:313] Waiting for caches to sync for service config
I0331 08:48:44.778812       1 config.go:105] "Starting endpoint slice config controller"
I0331 08:48:44.783485       1 shared_informer.go:313] Waiting for caches to sync for endpoint slice config
I0331 08:48:44.787856       1 config.go:329] "Starting node config controller"
I0331 08:48:44.787953       1 shared_informer.go:313] Waiting for caches to sync for node config
I0331 08:48:45.007584       1 shared_informer.go:320] Caches are synced for endpoint slice config
I0331 08:48:45.007872       1 shared_informer.go:320] Caches are synced for service config
I0331 08:48:45.014904       1 shared_informer.go:320] Caches are synced for node config


==> kube-scheduler [fb983edf578b] <==
I0331 08:48:25.972777       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
W0331 08:48:26.028049       1 reflector.go:569] runtime/asm_amd64.s:1700: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0331 08:48:26.028098       1 reflector.go:166] "Unhandled Error" err="runtime/asm_amd64.s:1700: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError"
W0331 08:48:26.028188       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0331 08:48:26.028197       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.028223       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0331 08:48:26.028230       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.028334       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0331 08:48:26.028344       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.043268       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0331 08:48:26.043302       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.068807       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "volumeattachments" in API group "storage.k8s.io" at the cluster scope
E0331 08:48:26.068886       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.VolumeAttachment: failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.068954       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0331 08:48:26.068981       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.069040       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0331 08:48:26.069065       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.069100       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0331 08:48:26.069107       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.069137       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0331 08:48:26.069146       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.069172       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0331 08:48:26.069179       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.069210       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0331 08:48:26.069217       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.069246       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0331 08:48:26.069255       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.069284       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0331 08:48:26.069292       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.069320       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0331 08:48:26.069327       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.069354       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0331 08:48:26.069362       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.873471       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0331 08:48:26.873504       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.962226       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0331 08:48:26.962434       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0331 08:48:26.980250       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0331 08:48:26.980285       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0331 08:48:27.109632       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0331 08:48:27.114322       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:27.125345       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0331 08:48:27.127426       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:27.175910       1 reflector.go:569] runtime/asm_amd64.s:1700: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0331 08:48:27.175943       1 reflector.go:166] "Unhandled Error" err="runtime/asm_amd64.s:1700: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError"
W0331 08:48:27.193886       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0331 08:48:27.193923       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
W0331 08:48:27.254643       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0331 08:48:27.256189       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:27.255960       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0331 08:48:27.257201       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:27.315709       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0331 08:48:27.315742       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError"
W0331 08:48:27.315773       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0331 08:48:27.315780       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError"
W0331 08:48:27.327639       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0331 08:48:27.328989       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError"
W0331 08:48:27.381258       1 reflector.go:569] k8s.io/client-go/informers/factory.go:160: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0331 08:48:27.381293       1 reflector.go:166] "Unhandled Error" err="k8s.io/client-go/informers/factory.go:160: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError"
I0331 08:48:30.443196       1 shared_informer.go:320] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file


==> kubelet <==
Mar 31 08:49:11 minikube kubelet[2208]: I0331 08:49:11.134378    2208 reconciler_common.go:299] "Volume detached for volume \"kube-api-access-pgftc\" (UniqueName: \"kubernetes.io/projected/7061c46e-8f22-41c6-b71b-0d2ee0037d86-kube-api-access-pgftc\") on node \"minikube\" DevicePath \"\""
Mar 31 08:49:11 minikube kubelet[2208]: I0331 08:49:11.352995    2208 scope.go:117] "RemoveContainer" containerID="0346cc1c01b1a86b2edc0decb939b38cc64d879f49cfa8c78bcd65312e92259a"
Mar 31 08:49:11 minikube kubelet[2208]: I0331 08:49:11.438686    2208 scope.go:117] "RemoveContainer" containerID="0346cc1c01b1a86b2edc0decb939b38cc64d879f49cfa8c78bcd65312e92259a"
Mar 31 08:49:11 minikube kubelet[2208]: E0331 08:49:11.445754    2208 log.go:32] "ContainerStatus from runtime service failed" err="rpc error: code = Unknown desc = Error response from daemon: No such container: 0346cc1c01b1a86b2edc0decb939b38cc64d879f49cfa8c78bcd65312e92259a" containerID="0346cc1c01b1a86b2edc0decb939b38cc64d879f49cfa8c78bcd65312e92259a"
Mar 31 08:49:11 minikube kubelet[2208]: I0331 08:49:11.446529    2208 pod_container_deletor.go:53] "DeleteContainer returned error" containerID={"Type":"docker","ID":"0346cc1c01b1a86b2edc0decb939b38cc64d879f49cfa8c78bcd65312e92259a"} err="failed to get container status \"0346cc1c01b1a86b2edc0decb939b38cc64d879f49cfa8c78bcd65312e92259a\": rpc error: code = Unknown desc = Error response from daemon: No such container: 0346cc1c01b1a86b2edc0decb939b38cc64d879f49cfa8c78bcd65312e92259a"
Mar 31 08:49:12 minikube kubelet[2208]: I0331 08:49:12.379739    2208 scope.go:117] "RemoveContainer" containerID="b490001d880badf527b651784528902aa3a6d8f4e9ceeb3b9f2bf4fa4240861b"
Mar 31 08:49:12 minikube kubelet[2208]: I0331 08:49:12.660916    2208 kubelet_volumes.go:163] "Cleaned up orphaned pod volumes dir" podUID="7061c46e-8f22-41c6-b71b-0d2ee0037d86" path="/var/lib/kubelet/pods/7061c46e-8f22-41c6-b71b-0d2ee0037d86/volumes"
Mar 31 09:12:34 minikube kubelet[2208]: I0331 09:12:34.564757    2208 memory_manager.go:355] "RemoveStaleState removing state" podUID="7061c46e-8f22-41c6-b71b-0d2ee0037d86" containerName="coredns"
Mar 31 09:12:34 minikube kubelet[2208]: I0331 09:12:34.867893    2208 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/788b05cf-9939-41cd-be77-ecdd9d70a0e0-config-volume\") pod \"fastapi-deployment-cf4dc69bc-kktpf\" (UID: \"788b05cf-9939-41cd-be77-ecdd9d70a0e0\") " pod="default/fastapi-deployment-cf4dc69bc-kktpf"
Mar 31 09:12:34 minikube kubelet[2208]: I0331 09:12:34.868003    2208 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-zjvln\" (UniqueName: \"kubernetes.io/projected/d7805964-cb83-4825-a2a9-b1ffaab60925-kube-api-access-zjvln\") pod \"fastapi-deployment-cf4dc69bc-fw828\" (UID: \"d7805964-cb83-4825-a2a9-b1ffaab60925\") " pod="default/fastapi-deployment-cf4dc69bc-fw828"
Mar 31 09:12:34 minikube kubelet[2208]: I0331 09:12:34.868024    2208 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-jwvfv\" (UniqueName: \"kubernetes.io/projected/788b05cf-9939-41cd-be77-ecdd9d70a0e0-kube-api-access-jwvfv\") pod \"fastapi-deployment-cf4dc69bc-kktpf\" (UID: \"788b05cf-9939-41cd-be77-ecdd9d70a0e0\") " pod="default/fastapi-deployment-cf4dc69bc-kktpf"
Mar 31 09:12:34 minikube kubelet[2208]: I0331 09:12:34.868037    2208 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/d7805964-cb83-4825-a2a9-b1ffaab60925-config-volume\") pod \"fastapi-deployment-cf4dc69bc-fw828\" (UID: \"d7805964-cb83-4825-a2a9-b1ffaab60925\") " pod="default/fastapi-deployment-cf4dc69bc-fw828"
Mar 31 09:12:41 minikube kubelet[2208]: E0331 09:12:41.926726    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-jwvfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-kktpf_default(788b05cf-9939-41cd-be77-ecdd9d70a0e0): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:12:41 minikube kubelet[2208]: E0331 09:12:41.960765    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-kktpf" podUID="788b05cf-9939-41cd-be77-ecdd9d70a0e0"
Mar 31 09:12:42 minikube kubelet[2208]: E0331 09:12:42.926902    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-zjvln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-fw828_default(d7805964-cb83-4825-a2a9-b1ffaab60925): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:12:42 minikube kubelet[2208]: E0331 09:12:42.927074    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-jwvfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-kktpf_default(788b05cf-9939-41cd-be77-ecdd9d70a0e0): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:12:42 minikube kubelet[2208]: E0331 09:12:42.928133    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-fw828" podUID="d7805964-cb83-4825-a2a9-b1ffaab60925"
Mar 31 09:12:42 minikube kubelet[2208]: E0331 09:12:42.928690    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-kktpf" podUID="788b05cf-9939-41cd-be77-ecdd9d70a0e0"
Mar 31 09:12:43 minikube kubelet[2208]: E0331 09:12:43.933659    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-zjvln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-fw828_default(d7805964-cb83-4825-a2a9-b1ffaab60925): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:12:43 minikube kubelet[2208]: E0331 09:12:43.936789    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-fw828" podUID="d7805964-cb83-4825-a2a9-b1ffaab60925"
Mar 31 09:12:55 minikube kubelet[2208]: E0331 09:12:55.655019    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-jwvfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-kktpf_default(788b05cf-9939-41cd-be77-ecdd9d70a0e0): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:12:55 minikube kubelet[2208]: E0331 09:12:55.656326    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-kktpf" podUID="788b05cf-9939-41cd-be77-ecdd9d70a0e0"
Mar 31 09:12:59 minikube kubelet[2208]: E0331 09:12:59.654222    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-zjvln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-fw828_default(d7805964-cb83-4825-a2a9-b1ffaab60925): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:12:59 minikube kubelet[2208]: E0331 09:12:59.656105    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-fw828" podUID="d7805964-cb83-4825-a2a9-b1ffaab60925"
Mar 31 09:13:04 minikube kubelet[2208]: I0331 09:13:04.377019    2208 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-lvn5s\" (UniqueName: \"kubernetes.io/projected/6c204e92-982d-4e18-8b21-24f3df7e1cb2-kube-api-access-lvn5s\") pod \"mongodb-deployment-85cfc8d7c5-tjsnz\" (UID: \"6c204e92-982d-4e18-8b21-24f3df7e1cb2\") " pod="default/mongodb-deployment-85cfc8d7c5-tjsnz"
Mar 31 09:13:07 minikube kubelet[2208]: E0331 09:13:07.656788    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-jwvfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-kktpf_default(788b05cf-9939-41cd-be77-ecdd9d70a0e0): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:07 minikube kubelet[2208]: E0331 09:13:07.659176    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-kktpf" podUID="788b05cf-9939-41cd-be77-ecdd9d70a0e0"
Mar 31 09:13:11 minikube kubelet[2208]: E0331 09:13:11.686417    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-zjvln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-fw828_default(d7805964-cb83-4825-a2a9-b1ffaab60925): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:11 minikube kubelet[2208]: E0331 09:13:11.692800    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-fw828" podUID="d7805964-cb83-4825-a2a9-b1ffaab60925"
Mar 31 09:13:19 minikube kubelet[2208]: E0331 09:13:19.651674    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-jwvfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-kktpf_default(788b05cf-9939-41cd-be77-ecdd9d70a0e0): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:19 minikube kubelet[2208]: E0331 09:13:19.655762    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-kktpf" podUID="788b05cf-9939-41cd-be77-ecdd9d70a0e0"
Mar 31 09:13:22 minikube kubelet[2208]: E0331 09:13:22.652700    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-zjvln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-fw828_default(d7805964-cb83-4825-a2a9-b1ffaab60925): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:22 minikube kubelet[2208]: E0331 09:13:22.656910    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-fw828" podUID="d7805964-cb83-4825-a2a9-b1ffaab60925"
Mar 31 09:13:31 minikube kubelet[2208]: E0331 09:13:31.653078    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-jwvfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-kktpf_default(788b05cf-9939-41cd-be77-ecdd9d70a0e0): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:31 minikube kubelet[2208]: E0331 09:13:31.655249    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-kktpf" podUID="788b05cf-9939-41cd-be77-ecdd9d70a0e0"
Mar 31 09:13:35 minikube kubelet[2208]: E0331 09:13:35.664968    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-zjvln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-fw828_default(d7805964-cb83-4825-a2a9-b1ffaab60925): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:35 minikube kubelet[2208]: E0331 09:13:35.667804    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-fw828" podUID="d7805964-cb83-4825-a2a9-b1ffaab60925"
Mar 31 09:13:43 minikube kubelet[2208]: I0331 09:13:43.630412    2208 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="default/mongodb-deployment-85cfc8d7c5-tjsnz" podStartSLOduration=4.073024067 podStartE2EDuration="39.610302619s" podCreationTimestamp="2025-03-31 09:13:04 +0000 UTC" firstStartedPulling="2025-03-31 09:13:05.425546437 +0000 UTC m=+1475.351997899" lastFinishedPulling="2025-03-31 09:13:40.962824989 +0000 UTC m=+1510.889276451" observedRunningTime="2025-03-31 09:13:43.609266875 +0000 UTC m=+1513.535718337" watchObservedRunningTime="2025-03-31 09:13:43.610302619 +0000 UTC m=+1513.536754081"
Mar 31 09:13:45 minikube kubelet[2208]: I0331 09:13:45.606363    2208 scope.go:117] "RemoveContainer" containerID="4c5b709f5dc6a3f36ceca2c8da4302b72b59bdb4c1f811f0deacae82f16560d0"
Mar 31 09:13:46 minikube kubelet[2208]: E0331 09:13:46.653521    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-jwvfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-kktpf_default(788b05cf-9939-41cd-be77-ecdd9d70a0e0): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:46 minikube kubelet[2208]: E0331 09:13:46.653879    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-zjvln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-fw828_default(d7805964-cb83-4825-a2a9-b1ffaab60925): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:46 minikube kubelet[2208]: E0331 09:13:46.655774    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-fw828" podUID="d7805964-cb83-4825-a2a9-b1ffaab60925"
Mar 31 09:13:46 minikube kubelet[2208]: E0331 09:13:46.655801    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-kktpf" podUID="788b05cf-9939-41cd-be77-ecdd9d70a0e0"
Mar 31 09:13:47 minikube kubelet[2208]: I0331 09:13:47.664934    2208 scope.go:117] "RemoveContainer" containerID="4c5b709f5dc6a3f36ceca2c8da4302b72b59bdb4c1f811f0deacae82f16560d0"
Mar 31 09:13:47 minikube kubelet[2208]: I0331 09:13:47.665428    2208 scope.go:117] "RemoveContainer" containerID="883299ce479555681d37fe8488cab1a32aae70a6970e0a1b5a1a440794e94855"
Mar 31 09:13:47 minikube kubelet[2208]: E0331 09:13:47.665540    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"mongodb\" with CrashLoopBackOff: \"back-off 10s restarting failed container=mongodb pod=mongodb-deployment-85cfc8d7c5-tjsnz_default(6c204e92-982d-4e18-8b21-24f3df7e1cb2)\"" pod="default/mongodb-deployment-85cfc8d7c5-tjsnz" podUID="6c204e92-982d-4e18-8b21-24f3df7e1cb2"
Mar 31 09:13:58 minikube kubelet[2208]: I0331 09:13:58.651137    2208 scope.go:117] "RemoveContainer" containerID="883299ce479555681d37fe8488cab1a32aae70a6970e0a1b5a1a440794e94855"
Mar 31 09:13:58 minikube kubelet[2208]: E0331 09:13:58.662361    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-jwvfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-kktpf_default(788b05cf-9939-41cd-be77-ecdd9d70a0e0): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:58 minikube kubelet[2208]: E0331 09:13:58.664334    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-kktpf" podUID="788b05cf-9939-41cd-be77-ecdd9d70a0e0"
Mar 31 09:13:59 minikube kubelet[2208]: E0331 09:13:59.652995    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-zjvln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-fw828_default(d7805964-cb83-4825-a2a9-b1ffaab60925): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:13:59 minikube kubelet[2208]: E0331 09:13:59.657144    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-fw828" podUID="d7805964-cb83-4825-a2a9-b1ffaab60925"
Mar 31 09:14:00 minikube kubelet[2208]: I0331 09:14:00.901016    2208 scope.go:117] "RemoveContainer" containerID="883299ce479555681d37fe8488cab1a32aae70a6970e0a1b5a1a440794e94855"
Mar 31 09:14:00 minikube kubelet[2208]: I0331 09:14:00.902458    2208 scope.go:117] "RemoveContainer" containerID="c8afd8e0ddac81c4afd050c3b78635a19a2a3991faaa29570da0a5a4582c06f7"
Mar 31 09:14:00 minikube kubelet[2208]: E0331 09:14:00.902888    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"mongodb\" with CrashLoopBackOff: \"back-off 20s restarting failed container=mongodb pod=mongodb-deployment-85cfc8d7c5-tjsnz_default(6c204e92-982d-4e18-8b21-24f3df7e1cb2)\"" pod="default/mongodb-deployment-85cfc8d7c5-tjsnz" podUID="6c204e92-982d-4e18-8b21-24f3df7e1cb2"
Mar 31 09:14:10 minikube kubelet[2208]: E0331 09:14:10.654205    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-zjvln,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-fw828_default(d7805964-cb83-4825-a2a9-b1ffaab60925): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:14:10 minikube kubelet[2208]: E0331 09:14:10.655929    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-fw828" podUID="d7805964-cb83-4825-a2a9-b1ffaab60925"
Mar 31 09:14:10 minikube kubelet[2208]: E0331 09:14:10.661701    2208 kuberuntime_manager.go:1341] "Unhandled Error" err="container &Container{Name:fastapi,Image:fastapi-app:local,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:8000,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:config-volume,ReadOnly:false,MountPath:/app/config,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},VolumeMount{Name:kube-api-access-jwvfv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:&Probe{ProbeHandler:ProbeHandler{Exec:nil,HTTPGet:&HTTPGetAction{Path:/,Port:{0 8000 },Host:,Scheme:HTTP,HTTPHeaders:[]HTTPHeader{},},TCPSocket:nil,GRPC:nil,},InitialDelaySeconds:60,TimeoutSeconds:1,PeriodSeconds:30,SuccessThreshold:1,FailureThreshold:3,TerminationGracePeriodSeconds:nil,},ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{EnvFromSource{Prefix:,ConfigMapRef:&ConfigMapEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-config,},Optional:nil,},SecretRef:nil,},EnvFromSource{Prefix:,ConfigMapRef:nil,SecretRef:&SecretEnvSource{LocalObjectReference:LocalObjectReference{Name:fastapi-secret,},Optional:nil,},},},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod fastapi-deployment-cf4dc69bc-kktpf_default(788b05cf-9939-41cd-be77-ecdd9d70a0e0): CreateContainerConfigError: secret \"fastapi-secret\" not found" logger="UnhandledError"
Mar 31 09:14:10 minikube kubelet[2208]: E0331 09:14:10.663412    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"fastapi\" with CreateContainerConfigError: \"secret \\\"fastapi-secret\\\" not found\"" pod="default/fastapi-deployment-cf4dc69bc-kktpf" podUID="788b05cf-9939-41cd-be77-ecdd9d70a0e0"
Mar 31 09:14:11 minikube kubelet[2208]: I0331 09:14:11.648863    2208 scope.go:117] "RemoveContainer" containerID="c8afd8e0ddac81c4afd050c3b78635a19a2a3991faaa29570da0a5a4582c06f7"
Mar 31 09:14:11 minikube kubelet[2208]: E0331 09:14:11.649062    2208 pod_workers.go:1301] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"mongodb\" with CrashLoopBackOff: \"back-off 20s restarting failed container=mongodb pod=mongodb-deployment-85cfc8d7c5-tjsnz_default(6c204e92-982d-4e18-8b21-24f3df7e1cb2)\"" pod="default/mongodb-deployment-85cfc8d7c5-tjsnz" podUID="6c204e92-982d-4e18-8b21-24f3df7e1cb2"


==> storage-provisioner [b490001d880b] <==
I0331 08:48:41.632287       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0331 08:49:11.791910       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": dial tcp 10.96.0.1:443: i/o timeout


==> storage-provisioner [eab863de5b35] <==
I0331 08:49:12.733764       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0331 08:49:12.814384       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0331 08:49:12.814648       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0331 08:49:12.834420       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0331 08:49:12.835207       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_af109acf-a6d1-45f9-b77e-90dbbe675c1d!
I0331 08:49:12.835228       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"e0bfe796-3aae-4200-a51a-a97cc9c761e5", APIVersion:"v1", ResourceVersion:"454", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_af109acf-a6d1-45f9-b77e-90dbbe675c1d became leader
I0331 08:49:12.938932       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_af109acf-a6d1-45f9-b77e-90dbbe675c1d!

